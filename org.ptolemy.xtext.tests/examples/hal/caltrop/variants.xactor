model hal.caltrop.actors.variants

actor single1T1String<T>
T input ==> String output
var int step = 0;
action [t] ==> [step + ": t=" + t]
do step = step + 1;

actor single1int1int
int input ==> int output
action [i] ==> [i]

actor double2int1int
int[2] input ==> int[2] output
action [i1, i2] ==> [i1, i2]

actor single1int1String
int input ==> String output
// var int step = 0;
action [i] ==> [step + ": i=" + i]
// do step = step + 1;

actor double2int1String
int[2] input ==> String[2] output
var int step = 0;
action [i1, i2] ==> [step + ": i1=" + i1, step + ": i2=" + i2]
do step = step + 1;

actor singleRepeat1int1int
int[3] input ==> int[3] output
action [i] repeat 3 ==> [i] repeat 3

actor singleRepeat1Integer1Integer
Integer[3] input ==> Integer[3] output
action [i] repeat 3 ==> [i] repeat 3

actor singleRepeat1int3int
int[3] input ==> int[3] output
action [i] repeat 3 ==> [i#0, i#1, i#2]

actor singleRepeat1Integer3int
Integer[3] input ==> int[3] output
action [i] repeat 3 ==> [i#0, i#1, i#2]

actor doubleRepeat1int1int
int[6] input ==> int[6] output
action [i1, i2] repeat 3 ==> [i1, i2] repeat 3

//actor singleMulti1int1int
//int* input ==> int* output
//action [i1] any ==> [i1] at* {i1}

actor doubleMulti1int1int
int[2]* input ==> int[2]* output
action [i1, i2] all ==> [i1, i2] all

//actor singleRepeatMulti1int1int
//int[3]* input ==> int[3]* output
//action [i1] repeat 3 any ==> [i1] repeat 3 at* {i1}

actor doubleRepeatMulti1int1int
int[6]* input ==> int[6]* output
action [i1, i2] repeat 3 any ==> [i1, i2] repeat 3 all

actor doubleRepeatMulti1Date1Date
java.util.Date* input ==> java.util.Date* output
action [i1, i2] repeat 3 any ==> [i1, i2] repeat 3 all
