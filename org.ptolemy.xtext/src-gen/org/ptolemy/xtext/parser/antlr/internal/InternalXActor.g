/*
* generated by Xtext
*/
grammar InternalXActor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.ptolemy.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ptolemy.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ptolemy.xtext.services.XActorGrammarAccess;

}

@parser::members {

 	private XActorGrammarAccess grammarAccess;
 	
    public InternalXActorParser(TokenStream input, XActorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ActorModel";	
   	}
   	
   	@Override
   	protected XActorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleActorModel
entryRuleActorModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorModelRule()); }
	 iv_ruleActorModel=ruleActorModel 
	 { $current=$iv_ruleActorModel.current; } 
	 EOF 
;

// Rule ActorModel
ruleActorModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActorModelAccess().getActorModelAction_0(),
            $current);
    }
)	otherlv_1='model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorModelAccess().getModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getActorModelAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getImportsImportDirectiveParserRuleCall_4_0()); 
	    }
		lv_imports_4_0=ruleImportDirective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_4_0, 
        		"ImportDirective");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getAttributesAttributeParserRuleCall_5_0()); 
	    }
		lv_attributes_5_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getEntityContainersEntityFolderParserRuleCall_6_0()); 
	    }
		lv_entityContainers_6_0=ruleEntityFolder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		add(
       			$current, 
       			"entityContainers",
        		lv_entityContainers_6_0, 
        		"EntityFolder");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getEntitiesEntityParserRuleCall_7_0()); 
	    }
		lv_entities_7_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_7_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorModelAccess().getRelationsRelationParserRuleCall_8_0()); 
	    }
		lv_relations_8_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorModelRule());
	        }
       		add(
       			$current, 
       			"relations",
        		lv_relations_8_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleEntityFolder
entryRuleEntityFolder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityFolderRule()); }
	 iv_ruleEntityFolder=ruleEntityFolder 
	 { $current=$iv_ruleEntityFolder.current; } 
	 EOF 
;

// Rule EntityFolder
ruleEntityFolder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEntityFolderAccess().getEntityFolderAction_0(),
            $current);
    }
)	otherlv_1='container' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityFolderAccess().getContainerKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityFolderAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityFolderRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getEntityFolderAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityFolderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityFolderAccess().getAttributesAttributeParserRuleCall_4_0()); 
	    }
		lv_attributes_4_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityFolderRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_4_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityFolderAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEntityFolderAccess().getEntitiesEntityParserRuleCall_6_0_0()); 
	    }
		lv_entities_6_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityFolderRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_6_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityFolderAccess().getEntityContainersEntityFolderParserRuleCall_6_1_0()); 
	    }
		lv_entityContainers_7_0=ruleEntityFolder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityFolderRule());
	        }
       		add(
       			$current, 
       			"entityContainers",
        		lv_entityContainers_7_0, 
        		"EntityFolder");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEntityFolderAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleImportDirective
entryRuleImportDirective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportDirectiveRule()); }
	 iv_ruleImportDirective=ruleImportDirective 
	 { $current=$iv_ruleImportDirective.current; } 
	 EOF 
;

// Rule ImportDirective
ruleImportDirective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportDirectiveAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportDirectiveAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportDirectiveRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getTypedAtomicActorParserRuleCall_0()); 
    }
    this_TypedAtomicActor_0=ruleTypedAtomicActor
    { 
        $current = $this_TypedAtomicActor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getTypedAtomicActorInstanceParserRuleCall_1()); 
    }
    this_TypedAtomicActorInstance_1=ruleTypedAtomicActorInstance
    { 
        $current = $this_TypedAtomicActorInstance_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getCompositeEntityParserRuleCall_2()); 
    }
    this_CompositeEntity_2=ruleCompositeEntity
    { 
        $current = $this_CompositeEntity_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActorRef
entryRuleActorRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorRefRule()); }
	 iv_ruleActorRef=ruleActorRef 
	 { $current=$iv_ruleActorRef.current; } 
	 EOF 
;

// Rule ActorRef
ruleActorRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getRefEntityCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorRefAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getTypeArgumentsJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeArguments_2_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_2_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActorRefAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getTypeArgumentsJvmTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getActorRefAccess().getGreaterThanSignKeyword_1_3());
    }
)?(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActorRefAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getParameterBindingsParameterBindingParserRuleCall_2_1_0()); 
	    }
		lv_parameterBindings_7_0=ruleParameterBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		add(
       			$current, 
       			"parameterBindings",
        		lv_parameterBindings_7_0, 
        		"ParameterBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActorRefAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getParameterBindingsParameterBindingParserRuleCall_2_2_1_0()); 
	    }
		lv_parameterBindings_9_0=ruleParameterBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		add(
       			$current, 
       			"parameterBindings",
        		lv_parameterBindings_9_0, 
        		"ParameterBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActorRefAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleXInitExpression
entryRuleXInitExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXInitExpressionRule()); }
	 iv_ruleXInitExpression=ruleXInitExpression 
	 { $current=$iv_ruleXInitExpression.current; } 
	 EOF 
;

// Rule XInitExpression
ruleXInitExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXInitExpressionAccess().getXOrExpressionParserRuleCall()); 
    }
    this_XOrExpression_0=ruleXOrExpression
    { 
        $current = $this_XOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleParameterBinding
entryRuleParameterBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterBindingRule()); }
	 iv_ruleParameterBinding=ruleParameterBinding 
	 { $current=$iv_ruleParameterBinding.current; } 
	 EOF 
;

// Rule ParameterBinding
ruleParameterBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterBindingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterBindingAccess().getParameterRefParameterCrossReference_0_0_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterBindingAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterBindingAccess().getValueExpressionXInitExpressionParserRuleCall_1_0()); 
	    }
		lv_valueExpression_2_0=ruleXInitExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterBindingRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_2_0, 
        		"XInitExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIS_A
entryRuleIS_A returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIS_ARule()); } 
	 iv_ruleIS_A=ruleIS_A 
	 { $current=$iv_ruleIS_A.current.getText(); }  
	 EOF 
;

// Rule IS_A
ruleIS_A returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='is' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIS_AAccess().getIsKeyword()); 
    }

    ;





// Entry rule entryRuleMAPS_TO
entryRuleMAPS_TO returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMAPS_TORule()); } 
	 iv_ruleMAPS_TO=ruleMAPS_TO 
	 { $current=$iv_ruleMAPS_TO.current.getText(); }  
	 EOF 
;

// Rule MAPS_TO
ruleMAPS_TO returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='==>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMAPS_TOAccess().getEqualsSignEqualsSignGreaterThanSignKeyword()); 
    }

    ;





// Entry rule entryRuleTypedAtomicActor
entryRuleTypedAtomicActor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedAtomicActorRule()); }
	 iv_ruleTypedAtomicActor=ruleTypedAtomicActor 
	 { $current=$iv_ruleTypedAtomicActor.current; } 
	 EOF 
;

// Rule TypedAtomicActor
ruleTypedAtomicActor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypedAtomicActorAccess().getTypedAtomicActorAction_0(),
            $current);
    }
)	otherlv_1='actor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypedAtomicActorAccess().getActorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getTypedAtomicActorAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedAtomicActorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?(	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypedAtomicActorAccess().getLessThanSignKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getTypeParametersTypeParameterParserRuleCall_4_1_0()); 
	    }
		lv_typeParameters_5_0=ruleTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_5_0, 
        		"TypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypedAtomicActorAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getTypeParametersTypeParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_typeParameters_7_0=ruleTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_7_0, 
        		"TypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTypedAtomicActorAccess().getGreaterThanSignKeyword_4_3());
    }
)?(	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypedAtomicActorAccess().getLeftParenthesisKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getAttributesActorParameterParserRuleCall_5_1_0()); 
	    }
		lv_attributes_10_0=ruleActorParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_10_0, 
        		"ActorParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypedAtomicActorAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getAttributesActorParameterParserRuleCall_5_2_1_0()); 
	    }
		lv_attributes_12_0=ruleActorParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_12_0, 
        		"ActorParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTypedAtomicActorAccess().getRightParenthesisKeyword_5_3());
    }
)?(((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getPortsTypedInputPortParserRuleCall_6_0_0_0()); 
	    }
		lv_ports_14_0=ruleTypedInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_14_0, 
        		"TypedInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTypedAtomicActorAccess().getCommaKeyword_6_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getPortsTypedInputPortParserRuleCall_6_0_1_1_0()); 
	    }
		lv_ports_16_0=ruleTypedInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_16_0, 
        		"TypedInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
    { 
        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getMAPS_TOParserRuleCall_6_1()); 
    }
ruleMAPS_TO
    { 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getPortsTypedOutputPortParserRuleCall_6_2_0_0()); 
	    }
		lv_ports_18_0=ruleTypedOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_18_0, 
        		"TypedOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTypedAtomicActorAccess().getCommaKeyword_6_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getPortsTypedOutputPortParserRuleCall_6_2_1_1_0()); 
	    }
		lv_ports_20_0=ruleTypedOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_20_0, 
        		"TypedOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)?(
    { 
        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getIS_AParserRuleCall_7_0()); 
    }
ruleIS_A
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getSuperEntityActorRefParserRuleCall_7_1_0()); 
	    }
		lv_superEntity_22_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		set(
       			$current, 
       			"superEntity",
        		lv_superEntity_22_0, 
        		"ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getPortsPortParserRuleCall_8_0()); 
	    }
		lv_ports_23_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_23_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getAttributesAttributeParserRuleCall_9_0()); 
	    }
		lv_attributes_24_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_24_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorAccess().getImplAtomicActorImplParserRuleCall_10_0()); 
	    }
		lv_impl_25_0=ruleAtomicActorImpl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorRule());
	        }
       		set(
       			$current, 
       			"impl",
        		lv_impl_25_0, 
        		"AtomicActorImpl");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTypeParameter
entryRuleTypeParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeParameterRule()); }
	 iv_ruleTypeParameter=ruleTypeParameter 
	 { $current=$iv_ruleTypeParameter.current; } 
	 EOF 
;

// Rule TypeParameter
ruleTypeParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTypeParameterAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='extends' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeParameterAccess().getExtendsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeParameterAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_2_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleInstanceParameterBinding
entryRuleInstanceParameterBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceParameterBindingRule()); }
	 iv_ruleInstanceParameterBinding=ruleInstanceParameterBinding 
	 { $current=$iv_ruleInstanceParameterBinding.current; } 
	 EOF 
;

// Rule InstanceParameterBinding
ruleInstanceParameterBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceParameterBindingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInstanceParameterBindingAccess().getParameterRefParameterCrossReference_0_0_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceParameterBindingAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceParameterBindingAccess().getValueExpressionXBooleanLiteralParserRuleCall_1_0_0()); 
	    }
		lv_valueExpression_2_1=ruleXBooleanLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceParameterBindingRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_2_1, 
        		"XBooleanLiteral");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getInstanceParameterBindingAccess().getValueExpressionXNumberLiteralParserRuleCall_1_0_1()); 
	    }
		lv_valueExpression_2_2=ruleXNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceParameterBindingRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_2_2, 
        		"XNumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getInstanceParameterBindingAccess().getValueExpressionXStringLiteralParserRuleCall_1_0_2()); 
	    }
		lv_valueExpression_2_3=ruleXStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceParameterBindingRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_2_3, 
        		"XStringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleInstanceActorRef
entryRuleInstanceActorRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceActorRefRule()); }
	 iv_ruleInstanceActorRef=ruleInstanceActorRef 
	 { $current=$iv_ruleInstanceActorRef.current; } 
	 EOF 
;

// Rule InstanceActorRef
ruleInstanceActorRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceActorRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInstanceActorRefAccess().getRefEntityCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceActorRefAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceActorRefAccess().getParameterBindingsInstanceParameterBindingParserRuleCall_1_1_0()); 
	    }
		lv_parameterBindings_2_0=ruleInstanceParameterBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceActorRefRule());
	        }
       		add(
       			$current, 
       			"parameterBindings",
        		lv_parameterBindings_2_0, 
        		"InstanceParameterBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstanceActorRefAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceActorRefAccess().getParameterBindingsInstanceParameterBindingParserRuleCall_1_2_1_0()); 
	    }
		lv_parameterBindings_4_0=ruleInstanceParameterBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceActorRefRule());
	        }
       		add(
       			$current, 
       			"parameterBindings",
        		lv_parameterBindings_4_0, 
        		"InstanceParameterBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstanceActorRefAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleTypedAtomicActorInstance
entryRuleTypedAtomicActorInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedAtomicActorInstanceRule()); }
	 iv_ruleTypedAtomicActorInstance=ruleTypedAtomicActorInstance 
	 { $current=$iv_ruleTypedAtomicActorInstance.current; } 
	 EOF 
;

// Rule TypedAtomicActorInstance
ruleTypedAtomicActorInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypedAtomicActorInstanceAccess().getTypedAtomicActorAction_0(),
            $current);
    }
)	otherlv_1='instance' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypedAtomicActorInstanceAccess().getInstanceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorInstanceAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorInstanceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getTypedAtomicActorInstanceAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedAtomicActorInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getTypedAtomicActorInstanceAccess().getIS_AParserRuleCall_4()); 
    }
ruleIS_A
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedAtomicActorInstanceAccess().getSuperEntityInstanceActorRefParserRuleCall_5_0()); 
	    }
		lv_superEntity_5_0=ruleInstanceActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedAtomicActorInstanceRule());
	        }
       		set(
       			$current, 
       			"superEntity",
        		lv_superEntity_5_0, 
        		"InstanceActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCompositeEntity
entryRuleCompositeEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeEntityRule()); }
	 iv_ruleCompositeEntity=ruleCompositeEntity 
	 { $current=$iv_ruleCompositeEntity.current; } 
	 EOF 
;

// Rule CompositeEntity
ruleCompositeEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='entity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompositeEntityAccess().getEntityKeyword_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getNameValidIDParserRuleCall_0_0_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_2_0=RULE_STRING
		{
			newLeafNode(lv_displayName_2_0, grammarAccess.getCompositeEntityAccess().getDisplayNameSTRINGTerminalRuleCall_0_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_2_0, 
        		"STRING");
	    }

)
)?(
    { 
        newCompositeNode(grammarAccess.getCompositeEntityAccess().getIS_AParserRuleCall_0_0_3_0()); 
    }
ruleIS_A
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getSuperEntityActorRefParserRuleCall_0_0_3_1_0()); 
	    }
		lv_superEntity_4_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		set(
       			$current, 
       			"superEntity",
        		lv_superEntity_4_0, 
        		"ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompositeEntityAccess().getTypedCompositeActorAction_0_1_0_0(),
            $current);
    }
)	otherlv_6='composite' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeEntityAccess().getCompositeKeyword_0_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getNameValidIDParserRuleCall_0_1_0_2_0()); 
	    }
		lv_name_7_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_8_0=RULE_STRING
		{
			newLeafNode(lv_displayName_8_0, grammarAccess.getCompositeEntityAccess().getDisplayNameSTRINGTerminalRuleCall_0_1_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_8_0, 
        		"STRING");
	    }

)
)?(	otherlv_9='<' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCompositeEntityAccess().getLessThanSignKeyword_0_1_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getTypeParametersTypeParameterParserRuleCall_0_1_0_4_1_0()); 
	    }
		lv_typeParameters_10_0=ruleTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_10_0, 
        		"TypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCompositeEntityAccess().getCommaKeyword_0_1_0_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getTypeParametersTypeParameterParserRuleCall_0_1_0_4_2_1_0()); 
	    }
		lv_typeParameters_12_0=ruleTypeParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_12_0, 
        		"TypeParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='>' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCompositeEntityAccess().getGreaterThanSignKeyword_0_1_0_4_3());
    }
)?(	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCompositeEntityAccess().getLeftParenthesisKeyword_0_1_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getAttributesActorParameterParserRuleCall_0_1_0_5_1_0()); 
	    }
		lv_attributes_15_0=ruleActorParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_15_0, 
        		"ActorParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCompositeEntityAccess().getCommaKeyword_0_1_0_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getAttributesActorParameterParserRuleCall_0_1_0_5_2_1_0()); 
	    }
		lv_attributes_17_0=ruleActorParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_17_0, 
        		"ActorParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCompositeEntityAccess().getRightParenthesisKeyword_0_1_0_5_3());
    }
)?(((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getPortsTypedInputPortParserRuleCall_0_1_0_6_0_0_0()); 
	    }
		lv_ports_19_0=ruleTypedInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_19_0, 
        		"TypedInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getCompositeEntityAccess().getCommaKeyword_0_1_0_6_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getPortsTypedInputPortParserRuleCall_0_1_0_6_0_1_1_0()); 
	    }
		lv_ports_21_0=ruleTypedInputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_21_0, 
        		"TypedInputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
    { 
        newCompositeNode(grammarAccess.getCompositeEntityAccess().getMAPS_TOParserRuleCall_0_1_0_6_1()); 
    }
ruleMAPS_TO
    { 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getPortsTypedOutputPortParserRuleCall_0_1_0_6_2_0_0()); 
	    }
		lv_ports_23_0=ruleTypedOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_23_0, 
        		"TypedOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getCompositeEntityAccess().getCommaKeyword_0_1_0_6_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getPortsTypedOutputPortParserRuleCall_0_1_0_6_2_1_1_0()); 
	    }
		lv_ports_25_0=ruleTypedOutputPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_25_0, 
        		"TypedOutputPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)?)(
    { 
        newCompositeNode(grammarAccess.getCompositeEntityAccess().getIS_AParserRuleCall_0_1_1_0()); 
    }
ruleIS_A
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getSuperEntityActorRefParserRuleCall_0_1_1_1_0()); 
	    }
		lv_superEntity_27_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		set(
       			$current, 
       			"superEntity",
        		lv_superEntity_27_0, 
        		"ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?))(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getPortsPortParserRuleCall_1_0()); 
	    }
		lv_ports_28_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_28_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getAttributesAttributeParserRuleCall_2_0()); 
	    }
		lv_attributes_29_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_29_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_30='{' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getCompositeEntityAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getEntitiesEntityParserRuleCall_4_0()); 
	    }
		lv_entities_31_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_31_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeEntityAccess().getRelationsRelationParserRuleCall_5_0()); 
	    }
		lv_relations_32_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeEntityRule());
	        }
       		add(
       			$current, 
       			"relations",
        		lv_relations_32_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getCompositeEntityAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttributeAccess().getInjectableAttributeParserRuleCall_0()); 
    }
    this_InjectableAttribute_0=ruleInjectableAttribute
    { 
        $current = $this_InjectableAttribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttributeAccess().getVariableParserRuleCall_1()); 
    }
    this_Variable_1=ruleVariable
    { 
        $current = $this_Variable_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInjectableAttribute
entryRuleInjectableAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInjectableAttributeRule()); }
	 iv_ruleInjectableAttribute=ruleInjectableAttribute 
	 { $current=$iv_ruleInjectableAttribute.current; } 
	 EOF 
;

// Rule InjectableAttribute
ruleInjectableAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInjectableAttributeAccess().getHyphenMinusKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInjectableAttributeAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInjectableAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInjectableAttributeAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInjectableAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getInjectableAttributeAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectableAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='+' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getPlusSignKeyword_0_0());
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAccess().getParameterAction_0_1_0(),
            $current);
    }
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getAsteriskKeyword_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_5_0=RULE_STRING
		{
			newLeafNode(lv_displayName_5_0, grammarAccess.getVariableAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_5_0, 
        		"STRING");
	    }

)
)?(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVariableAccess().getEqualsSignKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getValueExpressionXInitExpressionParserRuleCall_4_1_0()); 
	    }
		lv_valueExpression_7_0=ruleXInitExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_7_0, 
        		"XInitExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVariableAccess().getSemicolonKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleActorParameter
entryRuleActorParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorParameterRule()); }
	 iv_ruleActorParameter=ruleActorParameter 
	 { $current=$iv_ruleActorParameter.current; } 
	 EOF 
;

// Rule ActorParameter
ruleActorParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getActorParameterAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_2_0=RULE_STRING
		{
			newLeafNode(lv_displayName_2_0, grammarAccess.getActorParameterAccess().getDisplayNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_2_0, 
        		"STRING");
	    }

)
)?(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActorParameterAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorParameterAccess().getValueExpressionXInitExpressionParserRuleCall_3_1_0()); 
	    }
		lv_valueExpression_4_0=ruleXInitExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorParameterRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_4_0, 
        		"XInitExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePort
entryRulePort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	 iv_rulePort=rulePort 
	 { $current=$iv_rulePort.current; } 
	 EOF 
;

// Rule Port
rulePort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getPortAccess().getPlainPortParserRuleCall_0_0()); 
    }
    this_PlainPort_0=rulePlainPort
    { 
        $current = $this_PlainPort_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPortAccess().getTypedIOPortParserRuleCall_0_1()); 
    }
    this_TypedIOPort_1=ruleTypedIOPort
    { 
        $current = $this_TypedIOPort_1.current; 
        afterParserOrEnumRuleCall();
    }
)(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPortAccess().getCommercialAtKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getAttributesAnnotationAttributeParserRuleCall_1_1_0()); 
	    }
		lv_attributes_3_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAnnotationAttribute
entryRuleAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeRule()); }
	 iv_ruleAnnotationAttribute=ruleAnnotationAttribute 
	 { $current=$iv_ruleAnnotationAttribute.current; } 
	 EOF 
;

// Rule AnnotationAttribute
ruleAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnnotationAttributeAccess().getParameterAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getTypePortTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_1_0=rulePortTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"PortTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationAttributeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getValueExpressionXInitExpressionParserRuleCall_4_0()); 
	    }
		lv_valueExpression_4_0=ruleXInitExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_4_0, 
        		"XInitExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnnotationAttributeAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRulePlainPort
entryRulePlainPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlainPortRule()); }
	 iv_rulePlainPort=rulePlainPort 
	 { $current=$iv_rulePlainPort.current; } 
	 EOF 
;

// Rule PlainPort
rulePlainPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPlainPortAccess().getPortAction_0(),
            $current);
    }
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPlainPortAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlainPortAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlainPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_3_0=RULE_STRING
		{
			newLeafNode(lv_displayName_3_0, grammarAccess.getPlainPortAccess().getDisplayNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlainPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_3_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRulePortTypeReference
entryRulePortTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortTypeReferenceRule()); }
	 iv_rulePortTypeReference=rulePortTypeReference 
	 { $current=$iv_rulePortTypeReference.current; } 
	 EOF 
;

// Rule PortTypeReference
rulePortTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPortTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTypedIOPort
entryRuleTypedIOPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedIOPortRule()); }
	 iv_ruleTypedIOPort=ruleTypedIOPort 
	 { $current=$iv_ruleTypedIOPort.current; } 
	 EOF 
;

// Rule TypedIOPort
ruleTypedIOPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedIOPortAccess().getIoKindIOPortKindEnumRuleCall_0_0()); 
	    }
		lv_ioKind_0_0=ruleIOPortKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedIOPortRule());
	        }
       		set(
       			$current, 
       			"ioKind",
        		lv_ioKind_0_0, 
        		"IOPortKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedIOPortAccess().getTypePortTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_1_0=rulePortTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedIOPortRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"PortTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypedIOPortAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_rate_3_0=RULE_INT
		{
			newLeafNode(lv_rate_3_0, grammarAccess.getTypedIOPortAccess().getRateINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedIOPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypedIOPortAccess().getRightSquareBracketKeyword_2_2());
    }
)?(
(
		lv_multiport_5_0=	'*' 
    {
        newLeafNode(lv_multiport_5_0, grammarAccess.getTypedIOPortAccess().getMultiportAsteriskKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedIOPortRule());
	        }
       		setWithLastConsumed($current, "multiport", true, "*");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedIOPortAccess().getNameValidIDParserRuleCall_4_0()); 
	    }
		lv_name_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedIOPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_7_0=RULE_STRING
		{
			newLeafNode(lv_displayName_7_0, grammarAccess.getTypedIOPortAccess().getDisplayNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedIOPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_7_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleTypedInputPort
entryRuleTypedInputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedInputPortRule()); }
	 iv_ruleTypedInputPort=ruleTypedInputPort 
	 { $current=$iv_ruleTypedInputPort.current; } 
	 EOF 
;

// Rule TypedInputPort
ruleTypedInputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedInputPortAccess().getTypePortTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_type_0_0=rulePortTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedInputPortRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"PortTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypedInputPortAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		lv_rate_2_0=RULE_INT
		{
			newLeafNode(lv_rate_2_0, grammarAccess.getTypedInputPortAccess().getRateINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rate",
        		lv_rate_2_0, 
        		"INT");
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypedInputPortAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_multiport_4_0=	'*' 
    {
        newLeafNode(lv_multiport_4_0, grammarAccess.getTypedInputPortAccess().getMultiportAsteriskKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedInputPortRule());
	        }
       		setWithLastConsumed($current, "multiport", true, "*");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedInputPortAccess().getNameValidIDParserRuleCall_3_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedInputPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_6_0=RULE_STRING
		{
			newLeafNode(lv_displayName_6_0, grammarAccess.getTypedInputPortAccess().getDisplayNameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedInputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_6_0, 
        		"STRING");
	    }

)
)?(	otherlv_7='@' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypedInputPortAccess().getCommercialAtKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedInputPortAccess().getAttributesAnnotationAttributeParserRuleCall_5_1_0()); 
	    }
		lv_attributes_8_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedInputPortRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTypedOutputPort
entryRuleTypedOutputPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedOutputPortRule()); }
	 iv_ruleTypedOutputPort=ruleTypedOutputPort 
	 { $current=$iv_ruleTypedOutputPort.current; } 
	 EOF 
;

// Rule TypedOutputPort
ruleTypedOutputPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedOutputPortAccess().getTypePortTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_type_0_0=rulePortTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedOutputPortRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"PortTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypedOutputPortAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		lv_rate_2_0=RULE_INT
		{
			newLeafNode(lv_rate_2_0, grammarAccess.getTypedOutputPortAccess().getRateINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rate",
        		lv_rate_2_0, 
        		"INT");
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypedOutputPortAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_multiport_4_0=	'*' 
    {
        newLeafNode(lv_multiport_4_0, grammarAccess.getTypedOutputPortAccess().getMultiportAsteriskKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedOutputPortRule());
	        }
       		setWithLastConsumed($current, "multiport", true, "*");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedOutputPortAccess().getNameValidIDParserRuleCall_3_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedOutputPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_6_0=RULE_STRING
		{
			newLeafNode(lv_displayName_6_0, grammarAccess.getTypedOutputPortAccess().getDisplayNameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedOutputPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_6_0, 
        		"STRING");
	    }

)
)?(	otherlv_7='@' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypedOutputPortAccess().getCommercialAtKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedOutputPortAccess().getAttributesAnnotationAttributeParserRuleCall_5_1_0()); 
	    }
		lv_attributes_8_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedOutputPortRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRPID
entryRuleRPID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRPIDRule()); } 
	 iv_ruleRPID=ruleRPID 
	 { $current=$iv_ruleRPID.current.getText(); }  
	 EOF 
;

// Rule RPID
ruleRPID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getRPIDAccess().getIDTerminalRuleCall_0()); 
    }
)?(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRPIDAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getRPIDAccess().getIDTerminalRuleCall_1_1()); 
    }
))
    ;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getRelationKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getSourcePortPortCrossReference_1_0()); 
	    }
		ruleRPID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getTargetPortsPortCrossReference_3_0()); 
	    }
		ruleRPID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRelationAccess().getCommaKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getTargetPortsPortCrossReference_4_1_0()); 
	    }
		ruleRPID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getAsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getNameValidIDParserRuleCall_5_1_0()); 
	    }
		lv_name_7_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_displayName_8_0=RULE_STRING
		{
			newLeafNode(lv_displayName_8_0, grammarAccess.getRelationAccess().getDisplayNameSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_8_0, 
        		"STRING");
	    }

)
)?)?)
;





// Entry rule entryRuleAtomicActorImpl
entryRuleAtomicActorImpl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicActorImplRule()); }
	 iv_ruleAtomicActorImpl=ruleAtomicActorImpl 
	 { $current=$iv_ruleAtomicActorImpl.current; } 
	 EOF 
;

// Rule AtomicActorImpl
ruleAtomicActorImpl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAtomicActorImplAccess().getAbstractEntityActorImplParserRuleCall_0()); 
    }
    this_AbstractEntityActorImpl_0=ruleAbstractEntityActorImpl
    { 
        $current = $this_AbstractEntityActorImpl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicActorImplAccess().getCaltropActorImplParserRuleCall_1()); 
    }
    this_CaltropActorImpl_1=ruleCaltropActorImpl
    { 
        $current = $this_CaltropActorImpl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAbstractEntityActorImpl
entryRuleAbstractEntityActorImpl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractEntityActorImplRule()); }
	 iv_ruleAbstractEntityActorImpl=ruleAbstractEntityActorImpl 
	 { $current=$iv_ruleAbstractEntityActorImpl.current; } 
	 EOF 
;

// Rule AbstractEntityActorImpl
ruleAbstractEntityActorImpl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='implementation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAbstractEntityActorImplAccess().getImplementationKeyword_0());
    }
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAbstractEntityActorImplAccess().getEntityActorImplAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractEntityActorImplAccess().getEntityEntityParserRuleCall_1_0_1_0()); 
	    }
		lv_entity_2_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractEntityActorImplRule());
	        }
       		set(
       			$current, 
       			"entity",
        		lv_entity_2_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAbstractEntityActorImplAccess().getEntityRefActorImplAction_1_1_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAbstractEntityActorImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAbstractEntityActorImplAccess().getRefEntityCrossReference_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='<' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAbstractEntityActorImplAccess().getLessThanSignKeyword_1_1_2_0());
    }
	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAbstractEntityActorImplAccess().getGreaterThanSignKeyword_1_1_2_1());
    }
)?)))
;





// Entry rule entryRuleCaltropActorImpl
entryRuleCaltropActorImpl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaltropActorImplRule()); }
	 iv_ruleCaltropActorImpl=ruleCaltropActorImpl 
	 { $current=$iv_ruleCaltropActorImpl.current; } 
	 EOF 
;

// Rule CaltropActorImpl
ruleCaltropActorImpl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCaltropActorImplAccess().getCaltropActorImplAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCaltropActorImplAccess().getDeclarationsStateVariableParserRuleCall_1_0()); 
	    }
		lv_declarations_1_0=ruleStateVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaltropActorImplRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_1_0, 
        		"StateVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		{ 
	        newCompositeNode(grammarAccess.getCaltropActorImplAccess().getInitActionsInitActionParserRuleCall_2_0_0_0()); 
	    }
		lv_initActions_2_0=ruleInitAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaltropActorImplRule());
	        }
       		add(
       			$current, 
       			"initActions",
        		lv_initActions_2_0, 
        		"InitAction");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getCaltropActorImplAccess().getActionsFireActionParserRuleCall_2_0_1_0()); 
	    }
		lv_actions_3_0=ruleFireAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaltropActorImplRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_3_0, 
        		"FireAction");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCaltropActorImplAccess().getActionsFireActionParserRuleCall_2_1_0()); 
	    }
		lv_actions_4_0=ruleFireAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaltropActorImplRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_4_0, 
        		"FireAction");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRuleStateVariable
entryRuleStateVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateVariableRule()); }
	 iv_ruleStateVariable=ruleStateVariable 
	 { $current=$iv_ruleStateVariable.current; } 
	 EOF 
;

// Rule StateVariable
ruleStateVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_constant_0_0=	'val' 
    {
        newLeafNode(lv_constant_0_0, grammarAccess.getStateVariableAccess().getConstantValKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateVariableRule());
	        }
       		setWithLastConsumed($current, "constant", true, "val");
	    }

)
)
    |	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateVariableAccess().getVarKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateVariableAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateVariableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateVariableAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_3_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateVariableAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateVariableAccess().getValueExpressionXInitExpressionParserRuleCall_3_1_0()); 
	    }
		lv_valueExpression_5_0=ruleXInitExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateVariableRule());
	        }
       		set(
       			$current, 
       			"valueExpression",
        		lv_valueExpression_5_0, 
        		"XInitExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateVariableAccess().getSemicolonKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleInitAction
entryRuleInitAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitActionRule()); }
	 iv_ruleInitAction=ruleInitAction 
	 { $current=$iv_ruleInitAction.current; } 
	 EOF 
;

// Rule InitAction
ruleInitAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitActionAccess().getOutputActionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInitActionAccess().getNameValidIDParserRuleCall_1_0_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitActionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitActionAccess().getColonKeyword_1_1());
    }
)?	otherlv_3='initialize' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInitActionAccess().getInitializeKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getInitActionAccess().getMAPS_TOParserRuleCall_3()); 
    }
ruleMAPS_TO
    { 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInitActionAccess().getOutputPatternsOutputPatternParserRuleCall_4_0_0()); 
	    }
		lv_outputPatterns_5_0=ruleOutputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitActionRule());
	        }
       		add(
       			$current, 
       			"outputPatterns",
        		lv_outputPatterns_5_0, 
        		"OutputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInitActionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitActionAccess().getOutputPatternsOutputPatternParserRuleCall_4_1_1_0()); 
	    }
		lv_outputPatterns_7_0=ruleOutputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitActionRule());
	        }
       		add(
       			$current, 
       			"outputPatterns",
        		lv_outputPatterns_7_0, 
        		"OutputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_8='guard' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInitActionAccess().getGuardKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitActionAccess().getGuardExpressionXExpressionParserRuleCall_5_1_0()); 
	    }
		lv_guardExpression_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitActionRule());
	        }
       		set(
       			$current, 
       			"guardExpression",
        		lv_guardExpression_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='do' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInitActionAccess().getDoKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitActionAccess().getBodyExpressionXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_bodyExpression_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitActionRule());
	        }
       		set(
       			$current, 
       			"bodyExpression",
        		lv_bodyExpression_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInitActionAccess().getSemicolonKeyword_6_2());
    }
)?)
;





// Entry rule entryRuleFireAction
entryRuleFireAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFireActionRule()); }
	 iv_ruleFireAction=ruleFireAction 
	 { $current=$iv_ruleFireAction.current; } 
	 EOF 
;

// Rule FireAction
ruleFireAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFireActionAccess().getFireActionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getNameValidIDParserRuleCall_1_0_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFireActionAccess().getColonKeyword_1_1());
    }
)?	otherlv_3='action' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFireActionAccess().getActionKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getInputPatternsInputPatternParserRuleCall_3_0_0()); 
	    }
		lv_inputPatterns_4_0=ruleInputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		add(
       			$current, 
       			"inputPatterns",
        		lv_inputPatterns_4_0, 
        		"InputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFireActionAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getInputPatternsInputPatternParserRuleCall_3_1_1_0()); 
	    }
		lv_inputPatterns_6_0=ruleInputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		add(
       			$current, 
       			"inputPatterns",
        		lv_inputPatterns_6_0, 
        		"InputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
    { 
        newCompositeNode(grammarAccess.getFireActionAccess().getMAPS_TOParserRuleCall_4()); 
    }
ruleMAPS_TO
    { 
        afterParserOrEnumRuleCall();
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getOutputPatternsOutputPatternParserRuleCall_5_0_0()); 
	    }
		lv_outputPatterns_8_0=ruleOutputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		add(
       			$current, 
       			"outputPatterns",
        		lv_outputPatterns_8_0, 
        		"OutputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFireActionAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getOutputPatternsOutputPatternParserRuleCall_5_1_1_0()); 
	    }
		lv_outputPatterns_10_0=ruleOutputPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		add(
       			$current, 
       			"outputPatterns",
        		lv_outputPatterns_10_0, 
        		"OutputPattern");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_11='guard' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFireActionAccess().getGuardKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getGuardExpressionXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_guardExpression_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		set(
       			$current, 
       			"guardExpression",
        		lv_guardExpression_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='do' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFireActionAccess().getDoKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFireActionAccess().getBodyExpressionXExpressionParserRuleCall_7_1_0()); 
	    }
		lv_bodyExpression_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFireActionRule());
	        }
       		set(
       			$current, 
       			"bodyExpression",
        		lv_bodyExpression_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFireActionAccess().getSemicolonKeyword_7_2());
    }
)?)
;





// Entry rule entryRuleLID
entryRuleLID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLIDRule()); } 
	 iv_ruleLID=ruleLID 
	 { $current=$iv_ruleLID.current.getText(); }  
	 EOF 
;

// Rule LID
ruleLID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getLIDAccess().getValidIDParserRuleCall()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleInputPattern
entryRuleInputPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputPatternRule()); }
	 iv_ruleInputPattern=ruleInputPattern 
	 { $current=$iv_ruleInputPattern.current; } 
	 EOF 
;

// Rule InputPattern
ruleInputPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputPatternAccess().getInputPatternAction_0(),
            $current);
    }
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputPatternRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInputPatternAccess().getPortRefPortCrossReference_1_0_0()); 
	    }
		ruleLID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputPatternAccess().getColonKeyword_1_1());
    }
)?	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInputPatternAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInputPatternAccess().getVariablesValidIDParserRuleCall_3_0_0()); 
	    }
		lv_variables_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPatternRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInputPatternAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputPatternAccess().getVariablesValidIDParserRuleCall_3_1_1_0()); 
	    }
		lv_variables_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPatternRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputPatternAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_8='repeat' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInputPatternAccess().getRepeatKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputPatternAccess().getRepeatExpressionXExpressionParserRuleCall_5_1_0()); 
	    }
		lv_repeatExpression_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPatternRule());
	        }
       		set(
       			$current, 
       			"repeatExpression",
        		lv_repeatExpression_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputPatternAccess().getChannelsChannelSelectorParserRuleCall_6_0()); 
	    }
		lv_channels_10_0=ruleChannelSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputPatternRule());
	        }
       		set(
       			$current, 
       			"channels",
        		lv_channels_10_0, 
        		"ChannelSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleChannelSelector
entryRuleChannelSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChannelSelectorRule()); }
	 iv_ruleChannelSelector=ruleChannelSelector 
	 { $current=$iv_ruleChannelSelector.current; } 
	 EOF 
;

// Rule ChannelSelector
ruleChannelSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getChannelSelectorAccess().getExpressionChannelSelectorParserRuleCall_0()); 
    }
    this_ExpressionChannelSelector_0=ruleExpressionChannelSelector
    { 
        $current = $this_ExpressionChannelSelector_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChannelSelectorAccess().getKeywordChannelSelectorParserRuleCall_1()); 
    }
    this_KeywordChannelSelector_1=ruleKeywordChannelSelector
    { 
        $current = $this_KeywordChannelSelector_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionChannelSelector
entryRuleExpressionChannelSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionChannelSelectorRule()); }
	 iv_ruleExpressionChannelSelector=ruleExpressionChannelSelector 
	 { $current=$iv_ruleExpressionChannelSelector.current; } 
	 EOF 
;

// Rule ExpressionChannelSelector
ruleExpressionChannelSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionChannelSelectorAccess().getExpressionChannelSelectorAction_0(),
            $current);
    }
)(	otherlv_1='at' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionChannelSelectorAccess().getAtKeyword_1_0());
    }

    |(
(
		lv_many_2_0=	'at*' 
    {
        newLeafNode(lv_many_2_0, grammarAccess.getExpressionChannelSelectorAccess().getManyAtKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionChannelSelectorRule());
	        }
       		setWithLastConsumed($current, "many", true, "at*");
	    }

)
))	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpressionChannelSelectorAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionChannelSelectorAccess().getKeyExpressionsXExpressionParserRuleCall_3_0()); 
	    }
		lv_keyExpressions_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionChannelSelectorRule());
	        }
       		add(
       			$current, 
       			"keyExpressions",
        		lv_keyExpressions_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpressionChannelSelectorAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionChannelSelectorAccess().getKeyExpressionsXExpressionParserRuleCall_4_1_0()); 
	    }
		lv_keyExpressions_6_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionChannelSelectorRule());
	        }
       		add(
       			$current, 
       			"keyExpressions",
        		lv_keyExpressions_6_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpressionChannelSelectorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleKeywordChannelSelector
entryRuleKeywordChannelSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordChannelSelectorRule()); }
	 iv_ruleKeywordChannelSelector=ruleKeywordChannelSelector 
	 { $current=$iv_ruleKeywordChannelSelector.current; } 
	 EOF 
;

// Rule KeywordChannelSelector
ruleKeywordChannelSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='at' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKeywordChannelSelectorAccess().getAtKeyword_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordChannelSelectorAccess().getKeywordChannelSelectorKeywordEnumRuleCall_1_0()); 
	    }
		lv_keyword_1_0=ruleChannelSelectorKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordChannelSelectorRule());
	        }
       		set(
       			$current, 
       			"keyword",
        		lv_keyword_1_0, 
        		"ChannelSelectorKeyword");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutputPattern
entryRuleOutputPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputPatternRule()); }
	 iv_ruleOutputPattern=ruleOutputPattern 
	 { $current=$iv_ruleOutputPattern.current; } 
	 EOF 
;

// Rule OutputPattern
ruleOutputPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputPatternAccess().getOutputPatternAction_0(),
            $current);
    }
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputPatternRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOutputPatternAccess().getPortRefPortCrossReference_1_0_0()); 
	    }
		ruleLID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputPatternAccess().getColonKeyword_1_1());
    }
)?	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutputPatternAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPatternAccess().getValueExpressionsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_valueExpressions_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPatternRule());
	        }
       		add(
       			$current, 
       			"valueExpressions",
        		lv_valueExpressions_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOutputPatternAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPatternAccess().getValueExpressionsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_valueExpressions_6_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPatternRule());
	        }
       		add(
       			$current, 
       			"valueExpressions",
        		lv_valueExpressions_6_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutputPatternAccess().getRightSquareBracketKeyword_4());
    }
(	otherlv_8='repeat' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOutputPatternAccess().getRepeatKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPatternAccess().getRepeatExpressionXExpressionParserRuleCall_5_1_0()); 
	    }
		lv_repeatExpression_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPatternRule());
	        }
       		set(
       			$current, 
       			"repeatExpression",
        		lv_repeatExpression_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputPatternAccess().getChannelsChannelSelectorParserRuleCall_6_0()); 
	    }
		lv_channels_10_0=ruleChannelSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputPatternRule());
	        }
       		set(
       			$current, 
       			"channels",
        		lv_channels_10_0, 
        		"ChannelSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
    }
    this_XFeatureCall_3=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
    this_XLiteral_4=ruleXLiteral
    { 
        $current = $this_XLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
    }
    this_XIfExpression_5=ruleXIfExpression
    { 
        $current = $this_XIfExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
    }
    this_XForLoopExpression_6=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
    }
    this_XWhileExpression_7=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
    }
    this_XDoWhileExpression_8=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
    }
    this_XThrowExpression_9=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
    }
    this_XReturnExpression_10=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
    }
    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
    }
    this_XParenthesizedExpression_12=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXOther2OperatorExpressionParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXOther2OperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XOther2OperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXOther2OperatorExpressionParserRuleCall_1()); 
    }
    this_XOther2OperatorExpression_3=ruleXOther2OperatorExpression
    { 
        $current = $this_XOther2OperatorExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXOther2OperatorExpression
entryRuleXOther2OperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOther2OperatorExpressionRule()); }
	 iv_ruleXOther2OperatorExpression=ruleXOther2OperatorExpression 
	 { $current=$iv_ruleXOther2OperatorExpression.current; } 
	 EOF 
;

// Rule XOther2OperatorExpression
ruleXOther2OperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOther2OperatorExpressionAccess().getXCastedExpressionParserRuleCall_0()); 
    }
    this_XCastedExpression_0=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther2
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOther2OperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOther2OperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOther2OperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther2		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOther2OperatorExpressionAccess().getRightOperandXCastedExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXCastedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOther2OperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XCastedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther2
entryRuleOpOther2 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOther2Rule()); } 
	 iv_ruleOpOther2=ruleOpOther2 
	 { $current=$iv_ruleOpOther2.current.getText(); }  
	 EOF 
;

// Rule OpOther2
ruleOpOther2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='#' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOther2Access().getNumberSignKeyword()); 
    }

    ;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_1()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_2()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_1()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_5()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_6()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'.' 
(
(
		ruleValidID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_5_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'*.' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_8_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_8_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_spreading_9_0=	'*.' 
    {
        newLeafNode(lv_spreading_9_0, grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "spreading", true, "*.");
	    }

)
))))(	otherlv_10='<' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_11_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_11_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_13_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_13_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='>' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_16_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_16_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_17_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_17_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_20_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_20_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_22_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_22_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_0()); 
    }
    this_XClosure_0=ruleXClosure
    { 
        $current = $this_XClosure_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_1()); 
    }
    this_XBooleanLiteral_1=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_2()); 
    }
    this_XNumberLiteral_2=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_3()); 
    }
    this_XNullLiteral_3=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4()); 
    }
    this_XStringLiteral_4=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_5()); 
    }
    this_XTypeLiteral_5=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
((((((
(
ruleValidID
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
	    }
		lv_localVarName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	'(' 
(
(
ruleValidID
)
)	':' 
))=>(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
	    }
		lv_localVarName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeGuard_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }
	 iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock 
	 { $current=$iv_ruleXExpressionInsideBlock.current; } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeCrossReference_1_0()); 
	    }
		ruleStaticQualifier		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_1_0()); 
	    }
		lv_typeArguments_3_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_3_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_2_1_0()); 
	    }
		lv_typeArguments_5_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_5_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_2_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_3_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_8_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_8_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_featureCallArguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXFeatureCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_featureCallArguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleStaticQualifier
entryRuleStaticQualifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticQualifierRule()); } 
	 iv_ruleStaticQualifier=ruleStaticQualifier 
	 { $current=$iv_ruleStaticQualifier.current.getText(); }  
	 EOF 
;

// Rule StaticQualifier
ruleStaticQualifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStaticQualifierAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticQualifierAccess().getColonColonKeyword_1()); 
    }
)+
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'[' 
	']' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJvmTypeReferenceAccess().getLeftSquareBracketKeyword_0_1_0_1());
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmTypeReferenceAccess().getRightSquareBracketKeyword_0_1_0_2());
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_4=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





// Rule IOPortKind
ruleIOPortKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='>|' 
	{
        $current = grammarAccess.getIOPortKindAccess().getINPUTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getIOPortKindAccess().getINPUTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='|>' 
	{
        $current = grammarAccess.getIOPortKindAccess().getOUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getIOPortKindAccess().getOUTPUTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='>|>' 
	{
        $current = grammarAccess.getIOPortKindAccess().getINPUT_OUTPUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getIOPortKindAccess().getINPUT_OUTPUTEnumLiteralDeclaration_2()); 
    }
));



// Rule ChannelSelectorKeyword
ruleChannelSelectorKeyword returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='all' 
	{
        $current = grammarAccess.getChannelSelectorKeywordAccess().getALLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getChannelSelectorKeywordAccess().getALLEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='any' 
	{
        $current = grammarAccess.getChannelSelectorKeywordAccess().getANYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getChannelSelectorKeywordAccess().getANYEnumLiteralDeclaration_1()); 
    }
));



RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


