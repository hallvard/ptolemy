/*
* generated by Xtext
*/
package org.ptolemy.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class XActorGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ActorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityFolderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNamespaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQualifiedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDisplayNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cDisplayNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cImportsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImportsXImportSectionParserRuleCall_5_0 = (RuleCall)cImportsAssignment_5.eContents().get(0);
		private final Assignment cAttributesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAttributesInjectableAttributeParserRuleCall_6_0 = (RuleCall)cAttributesAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cEntityContainersAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cEntityContainersEntityFolderParserRuleCall_7_0_0 = (RuleCall)cEntityContainersAssignment_7_0.eContents().get(0);
		private final Assignment cEntitiesAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cEntitiesEntityParserRuleCall_7_1_0 = (RuleCall)cEntitiesAssignment_7_1.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ActorModel returns EntityFolder:
		//	{EntityFolder} "namespace" name=QualifiedName displayName=STRING? ":" imports=XImportSection?
		//	attributes+=InjectableAttribute* (entityContainers+=EntityFolder | entities+=Entity)* "end";
		public ParserRule getRule() { return rule; }

		//{EntityFolder} "namespace" name=QualifiedName displayName=STRING? ":" imports=XImportSection?
		//attributes+=InjectableAttribute* (entityContainers+=EntityFolder | entities+=Entity)* "end"
		public Group getGroup() { return cGroup; }

		//{EntityFolder}
		public Action getEntityFolderAction_0() { return cEntityFolderAction_0; }

		//"namespace"
		public Keyword getNamespaceKeyword_1() { return cNamespaceKeyword_1; }

		//name=QualifiedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_2_0() { return cNameQualifiedNameParserRuleCall_2_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_3() { return cDisplayNameAssignment_3; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_3_0() { return cDisplayNameSTRINGTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//imports=XImportSection?
		public Assignment getImportsAssignment_5() { return cImportsAssignment_5; }

		//XImportSection
		public RuleCall getImportsXImportSectionParserRuleCall_5_0() { return cImportsXImportSectionParserRuleCall_5_0; }

		//attributes+=InjectableAttribute*
		public Assignment getAttributesAssignment_6() { return cAttributesAssignment_6; }

		//InjectableAttribute
		public RuleCall getAttributesInjectableAttributeParserRuleCall_6_0() { return cAttributesInjectableAttributeParserRuleCall_6_0; }

		//(entityContainers+=EntityFolder | entities+=Entity)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//entityContainers+=EntityFolder
		public Assignment getEntityContainersAssignment_7_0() { return cEntityContainersAssignment_7_0; }

		//EntityFolder
		public RuleCall getEntityContainersEntityFolderParserRuleCall_7_0_0() { return cEntityContainersEntityFolderParserRuleCall_7_0_0; }

		//entities+=Entity
		public Assignment getEntitiesAssignment_7_1() { return cEntitiesAssignment_7_1; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_7_1_0() { return cEntitiesEntityParserRuleCall_7_1_0; }

		//"end"
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }
	}

	public class EntityFolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityFolder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNamespaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDisplayNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDisplayNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAttributesInjectableAttributeParserRuleCall_4_0 = (RuleCall)cAttributesAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cEntityContainersAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cEntityContainersEntityFolderParserRuleCall_5_0_0 = (RuleCall)cEntityContainersAssignment_5_0.eContents().get(0);
		private final Assignment cEntitiesAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cEntitiesEntityParserRuleCall_5_1_0 = (RuleCall)cEntitiesAssignment_5_1.eContents().get(0);
		private final Keyword cEndKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EntityFolder:
		//	"namespace" name=QualifiedName displayName=STRING? ":" attributes+=InjectableAttribute*
		//	(entityContainers+=EntityFolder | entities+=Entity)* "end";
		public ParserRule getRule() { return rule; }

		//"namespace" name=QualifiedName displayName=STRING? ":" attributes+=InjectableAttribute* (entityContainers+=EntityFolder
		//| entities+=Entity)* "end"
		public Group getGroup() { return cGroup; }

		//"namespace"
		public Keyword getNamespaceKeyword_0() { return cNamespaceKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_2() { return cDisplayNameAssignment_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_2_0() { return cDisplayNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//attributes+=InjectableAttribute*
		public Assignment getAttributesAssignment_4() { return cAttributesAssignment_4; }

		//InjectableAttribute
		public RuleCall getAttributesInjectableAttributeParserRuleCall_4_0() { return cAttributesInjectableAttributeParserRuleCall_4_0; }

		//(entityContainers+=EntityFolder | entities+=Entity)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//entityContainers+=EntityFolder
		public Assignment getEntityContainersAssignment_5_0() { return cEntityContainersAssignment_5_0; }

		//EntityFolder
		public RuleCall getEntityContainersEntityFolderParserRuleCall_5_0_0() { return cEntityContainersEntityFolderParserRuleCall_5_0_0; }

		//entities+=Entity
		public Assignment getEntitiesAssignment_5_1() { return cEntitiesAssignment_5_1; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_5_1_0() { return cEntitiesEntityParserRuleCall_5_1_0; }

		//"end"
		public Keyword getEndKeyword_6() { return cEndKeyword_6; }
	}

	public class QualifiedNameWithOptionalWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithOptionalWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cFullStopAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QualifiedNameWithOptionalWildcard:
		//	ID ("." ID)* ".*"?;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)* ".*"?
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_2() { return cFullStopAsteriskKeyword_2; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypedAtomicActorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompositeEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entity:
		//	TypedAtomicActor | CompositeEntity;
		public ParserRule getRule() { return rule; }

		//TypedAtomicActor | CompositeEntity
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypedAtomicActor
		public RuleCall getTypedAtomicActorParserRuleCall_0() { return cTypedAtomicActorParserRuleCall_0; }

		//CompositeEntity
		public RuleCall getCompositeEntityParserRuleCall_1() { return cCompositeEntityParserRuleCall_1; }
	}

	public class ActorRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cRefEntityCrossReference_0_0 = (CrossReference)cRefAssignment_0.eContents().get(0);
		private final RuleCall cRefEntityQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cRefEntityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeArgumentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeArgumentsJvmTypeReferenceParserRuleCall_1_1_0 = (RuleCall)cTypeArgumentsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cTypeArgumentsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cTypeArgumentsJvmTypeReferenceParserRuleCall_1_2_1_0 = (RuleCall)cTypeArgumentsAssignment_1_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParameterBindingsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParameterBindingsParameterBindingParserRuleCall_2_1_0 = (RuleCall)cParameterBindingsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cParameterBindingsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cParameterBindingsParameterBindingParserRuleCall_2_2_1_0 = (RuleCall)cParameterBindingsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//ActorRef:
		//	ref=[Entity|QualifiedName] ("<" typeArguments+=JvmTypeReference ("," typeArguments+=JvmTypeReference)* ">")? ("("
		//	parameterBindings+=ParameterBinding ("," parameterBindings+=ParameterBinding)* ")")?;
		public ParserRule getRule() { return rule; }

		//ref=[Entity|QualifiedName] ("<" typeArguments+=JvmTypeReference ("," typeArguments+=JvmTypeReference)* ">")? ("("
		//parameterBindings+=ParameterBinding ("," parameterBindings+=ParameterBinding)* ")")?
		public Group getGroup() { return cGroup; }

		//ref=[Entity|QualifiedName]
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }

		//[Entity|QualifiedName]
		public CrossReference getRefEntityCrossReference_0_0() { return cRefEntityCrossReference_0_0; }

		//QualifiedName
		public RuleCall getRefEntityQualifiedNameParserRuleCall_0_0_1() { return cRefEntityQualifiedNameParserRuleCall_0_0_1; }

		//("<" typeArguments+=JvmTypeReference ("," typeArguments+=JvmTypeReference)* ">")?
		public Group getGroup_1() { return cGroup_1; }

		//"<"
		public Keyword getLessThanSignKeyword_1_0() { return cLessThanSignKeyword_1_0; }

		//typeArguments+=JvmTypeReference
		public Assignment getTypeArgumentsAssignment_1_1() { return cTypeArgumentsAssignment_1_1; }

		//JvmTypeReference
		public RuleCall getTypeArgumentsJvmTypeReferenceParserRuleCall_1_1_0() { return cTypeArgumentsJvmTypeReferenceParserRuleCall_1_1_0; }

		//("," typeArguments+=JvmTypeReference)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//typeArguments+=JvmTypeReference
		public Assignment getTypeArgumentsAssignment_1_2_1() { return cTypeArgumentsAssignment_1_2_1; }

		//JvmTypeReference
		public RuleCall getTypeArgumentsJvmTypeReferenceParserRuleCall_1_2_1_0() { return cTypeArgumentsJvmTypeReferenceParserRuleCall_1_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_1_3() { return cGreaterThanSignKeyword_1_3; }

		//("(" parameterBindings+=ParameterBinding ("," parameterBindings+=ParameterBinding)* ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//parameterBindings+=ParameterBinding
		public Assignment getParameterBindingsAssignment_2_1() { return cParameterBindingsAssignment_2_1; }

		//ParameterBinding
		public RuleCall getParameterBindingsParameterBindingParserRuleCall_2_1_0() { return cParameterBindingsParameterBindingParserRuleCall_2_1_0; }

		//("," parameterBindings+=ParameterBinding)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//parameterBindings+=ParameterBinding
		public Assignment getParameterBindingsAssignment_2_2_1() { return cParameterBindingsAssignment_2_2_1; }

		//ParameterBinding
		public RuleCall getParameterBindingsParameterBindingParserRuleCall_2_2_1_0() { return cParameterBindingsParameterBindingParserRuleCall_2_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}

	public class ParameterBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cParameterRefAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cParameterRefParameterCrossReference_0_0_0 = (CrossReference)cParameterRefAssignment_0_0.eContents().get(0);
		private final RuleCall cParameterRefParameterValidIDParserRuleCall_0_0_0_1 = (RuleCall)cParameterRefParameterCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueExpressionXInitExpressionParserRuleCall_1_0 = (RuleCall)cValueExpressionAssignment_1.eContents().get(0);
		
		//ParameterBinding:
		//	(parameterRef=[Parameter|ValidID] "=")? valueExpression=XInitExpression;
		public ParserRule getRule() { return rule; }

		//(parameterRef=[Parameter|ValidID] "=")? valueExpression=XInitExpression
		public Group getGroup() { return cGroup; }

		//(parameterRef=[Parameter|ValidID] "=")?
		public Group getGroup_0() { return cGroup_0; }

		//parameterRef=[Parameter|ValidID]
		public Assignment getParameterRefAssignment_0_0() { return cParameterRefAssignment_0_0; }

		//[Parameter|ValidID]
		public CrossReference getParameterRefParameterCrossReference_0_0_0() { return cParameterRefParameterCrossReference_0_0_0; }

		//ValidID
		public RuleCall getParameterRefParameterValidIDParserRuleCall_0_0_0_1() { return cParameterRefParameterValidIDParserRuleCall_0_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }

		//valueExpression=XInitExpression
		public Assignment getValueExpressionAssignment_1() { return cValueExpressionAssignment_1; }

		//XInitExpression
		public RuleCall getValueExpressionXInitExpressionParserRuleCall_1_0() { return cValueExpressionXInitExpressionParserRuleCall_1_0; }
	}

	public class MAPS_TOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MAPS_TO");
		private final Keyword cEqualsSignEqualsSignGreaterThanSignKeyword = (Keyword)rule.eContents().get(1);
		
		//MAPS_TO:
		//	"==>";
		public ParserRule getRule() { return rule; }

		//"==>"
		public Keyword getEqualsSignEqualsSignGreaterThanSignKeyword() { return cEqualsSignEqualsSignGreaterThanSignKeyword; }
	}

	public class TypedAtomicActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedAtomicActor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypedAtomicActorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDisplayNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cDisplayNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLessThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterParserRuleCall_4_1_0 = (RuleCall)cTypeParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterParserRuleCall_4_2_1_0 = (RuleCall)cTypeParametersAssignment_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttributesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttributesParameterParserRuleCall_5_1_0 = (RuleCall)cAttributesAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cAttributesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cAttributesParameterParserRuleCall_5_2_1_0 = (RuleCall)cAttributesAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cPortsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cPortsTypedInputPortParserRuleCall_6_0_0_0 = (RuleCall)cPortsAssignment_6_0_0.eContents().get(0);
		private final Group cGroup_6_0_1 = (Group)cGroup_6_0.eContents().get(1);
		private final Keyword cCommaKeyword_6_0_1_0 = (Keyword)cGroup_6_0_1.eContents().get(0);
		private final Assignment cPortsAssignment_6_0_1_1 = (Assignment)cGroup_6_0_1.eContents().get(1);
		private final RuleCall cPortsTypedInputPortParserRuleCall_6_0_1_1_0 = (RuleCall)cPortsAssignment_6_0_1_1.eContents().get(0);
		private final RuleCall cMAPS_TOParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Assignment cPortsAssignment_6_2_0 = (Assignment)cGroup_6_2.eContents().get(0);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_6_2_0_0 = (RuleCall)cPortsAssignment_6_2_0.eContents().get(0);
		private final Group cGroup_6_2_1 = (Group)cGroup_6_2.eContents().get(1);
		private final Keyword cCommaKeyword_6_2_1_0 = (Keyword)cGroup_6_2_1.eContents().get(0);
		private final Assignment cPortsAssignment_6_2_1_1 = (Assignment)cGroup_6_2_1.eContents().get(1);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_6_2_1_1_0 = (RuleCall)cPortsAssignment_6_2_1_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSuperEntityAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSuperEntityActorRefParserRuleCall_7_1_0 = (RuleCall)cSuperEntityAssignment_7_1.eContents().get(0);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesInjectableAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Assignment cImplAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cImplAtomicActorImplParserRuleCall_9_0 = (RuleCall)cImplAssignment_9.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//TypedAtomicActor:
		//	{TypedAtomicActor} "actor" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
		//	typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//	ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* impl=AtomicActorImpl?
		//	"end";
		public ParserRule getRule() { return rule; }

		//{TypedAtomicActor} "actor" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
		//typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* impl=AtomicActorImpl? "end"
		public Group getGroup() { return cGroup; }

		//{TypedAtomicActor}
		public Action getTypedAtomicActorAction_0() { return cTypedAtomicActorAction_0; }

		//"actor"
		public Keyword getActorKeyword_1() { return cActorKeyword_1; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_3() { return cDisplayNameAssignment_3; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_3_0() { return cDisplayNameSTRINGTerminalRuleCall_3_0; }

		//("<" typeParameters+=TypeParameter ("," typeParameters+=TypeParameter)* ">")?
		public Group getGroup_4() { return cGroup_4; }

		//"<"
		public Keyword getLessThanSignKeyword_4_0() { return cLessThanSignKeyword_4_0; }

		//typeParameters+=TypeParameter
		public Assignment getTypeParametersAssignment_4_1() { return cTypeParametersAssignment_4_1; }

		//TypeParameter
		public RuleCall getTypeParametersTypeParameterParserRuleCall_4_1_0() { return cTypeParametersTypeParameterParserRuleCall_4_1_0; }

		//("," typeParameters+=TypeParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//typeParameters+=TypeParameter
		public Assignment getTypeParametersAssignment_4_2_1() { return cTypeParametersAssignment_4_2_1; }

		//TypeParameter
		public RuleCall getTypeParametersTypeParameterParserRuleCall_4_2_1_0() { return cTypeParametersTypeParameterParserRuleCall_4_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_3() { return cGreaterThanSignKeyword_4_3; }

		//("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//attributes+=Parameter
		public Assignment getAttributesAssignment_5_1() { return cAttributesAssignment_5_1; }

		//Parameter
		public RuleCall getAttributesParameterParserRuleCall_5_1_0() { return cAttributesParameterParserRuleCall_5_1_0; }

		//("," attributes+=Parameter)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//attributes+=Parameter
		public Assignment getAttributesAssignment_5_2_1() { return cAttributesAssignment_5_2_1; }

		//Parameter
		public RuleCall getAttributesParameterParserRuleCall_5_2_1_0() { return cAttributesParameterParserRuleCall_5_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_3() { return cRightParenthesisKeyword_5_3; }

		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?)?
		public Group getGroup_6() { return cGroup_6; }

		//(ports+=TypedInputPort ("," ports+=TypedInputPort)*)?
		public Group getGroup_6_0() { return cGroup_6_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_6_0_0() { return cPortsAssignment_6_0_0; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_6_0_0_0() { return cPortsTypedInputPortParserRuleCall_6_0_0_0; }

		//("," ports+=TypedInputPort)*
		public Group getGroup_6_0_1() { return cGroup_6_0_1; }

		//","
		public Keyword getCommaKeyword_6_0_1_0() { return cCommaKeyword_6_0_1_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_6_0_1_1() { return cPortsAssignment_6_0_1_1; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_6_0_1_1_0() { return cPortsTypedInputPortParserRuleCall_6_0_1_1_0; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_6_1() { return cMAPS_TOParserRuleCall_6_1; }

		//(ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_6_2_0() { return cPortsAssignment_6_2_0; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_6_2_0_0() { return cPortsTypedOutputPortParserRuleCall_6_2_0_0; }

		//("," ports+=TypedOutputPort)*
		public Group getGroup_6_2_1() { return cGroup_6_2_1; }

		//","
		public Keyword getCommaKeyword_6_2_1_0() { return cCommaKeyword_6_2_1_0; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_6_2_1_1() { return cPortsAssignment_6_2_1_1; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_6_2_1_1_0() { return cPortsTypedOutputPortParserRuleCall_6_2_1_1_0; }

		//("is" superEntity=ActorRef)?
		public Group getGroup_7() { return cGroup_7; }

		//"is"
		public Keyword getIsKeyword_7_0() { return cIsKeyword_7_0; }

		//superEntity=ActorRef
		public Assignment getSuperEntityAssignment_7_1() { return cSuperEntityAssignment_7_1; }

		//ActorRef
		public RuleCall getSuperEntityActorRefParserRuleCall_7_1_0() { return cSuperEntityActorRefParserRuleCall_7_1_0; }

		//attributes+=InjectableAttribute*
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }

		//InjectableAttribute
		public RuleCall getAttributesInjectableAttributeParserRuleCall_8_0() { return cAttributesInjectableAttributeParserRuleCall_8_0; }

		//impl=AtomicActorImpl?
		public Assignment getImplAssignment_9() { return cImplAssignment_9; }

		//AtomicActorImpl
		public RuleCall getImplAtomicActorImplParserRuleCall_9_0() { return cImplAtomicActorImplParserRuleCall_9_0; }

		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }
	}

	public class TypeParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cExtendsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		
		//TypeParameter:
		//	name=ValidID ("extends" type=JvmTypeReference)?;
		public ParserRule getRule() { return rule; }

		//name=ValidID ("extends" type=JvmTypeReference)?
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//("extends" type=JvmTypeReference)?
		public Group getGroup_1() { return cGroup_1; }

		//"extends"
		public Keyword getExtendsKeyword_1_0() { return cExtendsKeyword_1_0; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_1_1_0; }
	}

	public class TypedAtomicActorInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedAtomicActorInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypedAtomicActorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDisplayNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDisplayNameAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cSuperEntityAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cSuperEntityActorRefParserRuleCall_3_0_1_0 = (RuleCall)cSuperEntityAssignment_3_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Keyword cActorKeyword_3_1_0_1 = (Keyword)cGroup_3_1_0.eContents().get(1);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Group cGroup_3_1_1_0 = (Group)cGroup_3_1_1.eContents().get(0);
		private final Assignment cPortsAssignment_3_1_1_0_0 = (Assignment)cGroup_3_1_1_0.eContents().get(0);
		private final RuleCall cPortsTypedInputPortParserRuleCall_3_1_1_0_0_0 = (RuleCall)cPortsAssignment_3_1_1_0_0.eContents().get(0);
		private final Group cGroup_3_1_1_0_1 = (Group)cGroup_3_1_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0_1_0 = (Keyword)cGroup_3_1_1_0_1.eContents().get(0);
		private final Assignment cPortsAssignment_3_1_1_0_1_1 = (Assignment)cGroup_3_1_1_0_1.eContents().get(1);
		private final RuleCall cPortsTypedInputPortParserRuleCall_3_1_1_0_1_1_0 = (RuleCall)cPortsAssignment_3_1_1_0_1_1.eContents().get(0);
		private final RuleCall cMAPS_TOParserRuleCall_3_1_1_1 = (RuleCall)cGroup_3_1_1.eContents().get(1);
		private final Group cGroup_3_1_1_2 = (Group)cGroup_3_1_1.eContents().get(2);
		private final Assignment cPortsAssignment_3_1_1_2_0 = (Assignment)cGroup_3_1_1_2.eContents().get(0);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_3_1_1_2_0_0 = (RuleCall)cPortsAssignment_3_1_1_2_0.eContents().get(0);
		private final Group cGroup_3_1_1_2_1 = (Group)cGroup_3_1_1_2.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_2_1_0 = (Keyword)cGroup_3_1_1_2_1.eContents().get(0);
		private final Assignment cPortsAssignment_3_1_1_2_1_1 = (Assignment)cGroup_3_1_1_2_1.eContents().get(1);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_3_1_1_2_1_1_0 = (RuleCall)cPortsAssignment_3_1_1_2_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cIsKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cSuperEntityAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cSuperEntityActorRefParserRuleCall_3_1_2_1_0 = (RuleCall)cSuperEntityAssignment_3_1_2_1.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cAttributesInjectableAttributeParserRuleCall_3_1_3_0 = (RuleCall)cAttributesAssignment_3_1_3.eContents().get(0);
		private final Group cGroup_3_1_4 = (Group)cGroup_3_1.eContents().get(4);
		private final Assignment cImplAssignment_3_1_4_0 = (Assignment)cGroup_3_1_4.eContents().get(0);
		private final RuleCall cImplAtomicActorImplParserRuleCall_3_1_4_0_0 = (RuleCall)cImplAssignment_3_1_4_0.eContents().get(0);
		private final Keyword cEndKeyword_3_1_4_1 = (Keyword)cGroup_3_1_4.eContents().get(1);
		
		//TypedAtomicActorInstance returns TypedAtomicActor:
		//	{TypedAtomicActor} name=ValidID displayName=STRING? ("=" superEntity=ActorRef ";"? | ("=" "actor")?
		//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//	ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* (impl=AtomicActorImpl
		//	"end"));
		public ParserRule getRule() { return rule; }

		//{TypedAtomicActor} name=ValidID displayName=STRING? ("=" superEntity=ActorRef ";"? | ("=" "actor")?
		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* (impl=AtomicActorImpl
		//"end"))
		public Group getGroup() { return cGroup; }

		//{TypedAtomicActor}
		public Action getTypedAtomicActorAction_0() { return cTypedAtomicActorAction_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_2() { return cDisplayNameAssignment_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_2_0() { return cDisplayNameSTRINGTerminalRuleCall_2_0; }

		//"=" superEntity=ActorRef ";"? | ("=" "actor")? ((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO
		//(ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute*
		//(impl=AtomicActorImpl "end")
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"=" superEntity=ActorRef ";"?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_0_0() { return cEqualsSignKeyword_3_0_0; }

		//superEntity=ActorRef
		public Assignment getSuperEntityAssignment_3_0_1() { return cSuperEntityAssignment_3_0_1; }

		//ActorRef
		public RuleCall getSuperEntityActorRefParserRuleCall_3_0_1_0() { return cSuperEntityActorRefParserRuleCall_3_0_1_0; }

		//";"?
		public Keyword getSemicolonKeyword_3_0_2() { return cSemicolonKeyword_3_0_2; }

		//("=" "actor")? ((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* (impl=AtomicActorImpl "end")
		public Group getGroup_3_1() { return cGroup_3_1; }

		//("=" "actor")?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1_0_0() { return cEqualsSignKeyword_3_1_0_0; }

		//"actor"
		public Keyword getActorKeyword_3_1_0_1() { return cActorKeyword_3_1_0_1; }

		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//(ports+=TypedInputPort ("," ports+=TypedInputPort)*)?
		public Group getGroup_3_1_1_0() { return cGroup_3_1_1_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_3_1_1_0_0() { return cPortsAssignment_3_1_1_0_0; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_3_1_1_0_0_0() { return cPortsTypedInputPortParserRuleCall_3_1_1_0_0_0; }

		//("," ports+=TypedInputPort)*
		public Group getGroup_3_1_1_0_1() { return cGroup_3_1_1_0_1; }

		//","
		public Keyword getCommaKeyword_3_1_1_0_1_0() { return cCommaKeyword_3_1_1_0_1_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_3_1_1_0_1_1() { return cPortsAssignment_3_1_1_0_1_1; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_3_1_1_0_1_1_0() { return cPortsTypedInputPortParserRuleCall_3_1_1_0_1_1_0; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_3_1_1_1() { return cMAPS_TOParserRuleCall_3_1_1_1; }

		//(ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?
		public Group getGroup_3_1_1_2() { return cGroup_3_1_1_2; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_3_1_1_2_0() { return cPortsAssignment_3_1_1_2_0; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_3_1_1_2_0_0() { return cPortsTypedOutputPortParserRuleCall_3_1_1_2_0_0; }

		//("," ports+=TypedOutputPort)*
		public Group getGroup_3_1_1_2_1() { return cGroup_3_1_1_2_1; }

		//","
		public Keyword getCommaKeyword_3_1_1_2_1_0() { return cCommaKeyword_3_1_1_2_1_0; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_3_1_1_2_1_1() { return cPortsAssignment_3_1_1_2_1_1; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_3_1_1_2_1_1_0() { return cPortsTypedOutputPortParserRuleCall_3_1_1_2_1_1_0; }

		//("is" superEntity=ActorRef)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }

		//"is"
		public Keyword getIsKeyword_3_1_2_0() { return cIsKeyword_3_1_2_0; }

		//superEntity=ActorRef
		public Assignment getSuperEntityAssignment_3_1_2_1() { return cSuperEntityAssignment_3_1_2_1; }

		//ActorRef
		public RuleCall getSuperEntityActorRefParserRuleCall_3_1_2_1_0() { return cSuperEntityActorRefParserRuleCall_3_1_2_1_0; }

		//attributes+=InjectableAttribute*
		public Assignment getAttributesAssignment_3_1_3() { return cAttributesAssignment_3_1_3; }

		//InjectableAttribute
		public RuleCall getAttributesInjectableAttributeParserRuleCall_3_1_3_0() { return cAttributesInjectableAttributeParserRuleCall_3_1_3_0; }

		//impl=AtomicActorImpl "end"
		public Group getGroup_3_1_4() { return cGroup_3_1_4; }

		//impl=AtomicActorImpl
		public Assignment getImplAssignment_3_1_4_0() { return cImplAssignment_3_1_4_0; }

		//AtomicActorImpl
		public RuleCall getImplAtomicActorImplParserRuleCall_3_1_4_0_0() { return cImplAtomicActorImplParserRuleCall_3_1_4_0_0; }

		//"end"
		public Keyword getEndKeyword_3_1_4_1() { return cEndKeyword_3_1_4_1; }
	}

	public class CompositeEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompositeEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypedCompositeActorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNetworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDisplayNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cDisplayNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLessThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterParserRuleCall_4_1_0 = (RuleCall)cTypeParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cTypeParametersTypeParameterParserRuleCall_4_2_1_0 = (RuleCall)cTypeParametersAssignment_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttributesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttributesParameterParserRuleCall_5_1_0 = (RuleCall)cAttributesAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cAttributesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cAttributesParameterParserRuleCall_5_2_1_0 = (RuleCall)cAttributesAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cPortsAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cPortsTypedInputPortParserRuleCall_6_0_0_0 = (RuleCall)cPortsAssignment_6_0_0.eContents().get(0);
		private final Group cGroup_6_0_1 = (Group)cGroup_6_0.eContents().get(1);
		private final Keyword cCommaKeyword_6_0_1_0 = (Keyword)cGroup_6_0_1.eContents().get(0);
		private final Assignment cPortsAssignment_6_0_1_1 = (Assignment)cGroup_6_0_1.eContents().get(1);
		private final RuleCall cPortsTypedInputPortParserRuleCall_6_0_1_1_0 = (RuleCall)cPortsAssignment_6_0_1_1.eContents().get(0);
		private final RuleCall cMAPS_TOParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Assignment cPortsAssignment_6_2_0 = (Assignment)cGroup_6_2.eContents().get(0);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_6_2_0_0 = (RuleCall)cPortsAssignment_6_2_0.eContents().get(0);
		private final Group cGroup_6_2_1 = (Group)cGroup_6_2.eContents().get(1);
		private final Keyword cCommaKeyword_6_2_1_0 = (Keyword)cGroup_6_2_1.eContents().get(0);
		private final Assignment cPortsAssignment_6_2_1_1 = (Assignment)cGroup_6_2_1.eContents().get(1);
		private final RuleCall cPortsTypedOutputPortParserRuleCall_6_2_1_1_0 = (RuleCall)cPortsAssignment_6_2_1_1.eContents().get(0);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesInjectableAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cVarKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Assignment cAttributesAssignment_9_1_0 = (Assignment)cGroup_9_1.eContents().get(0);
		private final RuleCall cAttributesVariableParserRuleCall_9_1_0_0 = (RuleCall)cAttributesAssignment_9_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_1_1 = (Keyword)cGroup_9_1.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cEntitiesKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEntitiesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEntitiesTypedAtomicActorInstanceParserRuleCall_10_1_0 = (RuleCall)cEntitiesAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cStructureKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cRelationsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cRelationsConversionRelationParserRuleCall_11_1_0 = (RuleCall)cRelationsAssignment_11_1.eContents().get(0);
		private final Keyword cEndKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//CompositeEntity:
		//	{TypedCompositeActor} "network" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
		//	typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//	ports+=TypedOutputPort)*)?)? ":" attributes+=InjectableAttribute* ("var" (attributes+=Variable ";")*)? ("entities"
		//	entities+=TypedAtomicActorInstance*) ("structure" relations+=ConversionRelation*)? "end";
		public ParserRule getRule() { return rule; }

		//{TypedCompositeActor} "network" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
		//typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
		//ports+=TypedOutputPort)*)?)? ":" attributes+=InjectableAttribute* ("var" (attributes+=Variable ";")*)? ("entities"
		//entities+=TypedAtomicActorInstance*) ("structure" relations+=ConversionRelation*)? "end"
		public Group getGroup() { return cGroup; }

		//{TypedCompositeActor}
		public Action getTypedCompositeActorAction_0() { return cTypedCompositeActorAction_0; }

		//"network"
		public Keyword getNetworkKeyword_1() { return cNetworkKeyword_1; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_3() { return cDisplayNameAssignment_3; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_3_0() { return cDisplayNameSTRINGTerminalRuleCall_3_0; }

		//("<" typeParameters+=TypeParameter ("," typeParameters+=TypeParameter)* ">")?
		public Group getGroup_4() { return cGroup_4; }

		//"<"
		public Keyword getLessThanSignKeyword_4_0() { return cLessThanSignKeyword_4_0; }

		//typeParameters+=TypeParameter
		public Assignment getTypeParametersAssignment_4_1() { return cTypeParametersAssignment_4_1; }

		//TypeParameter
		public RuleCall getTypeParametersTypeParameterParserRuleCall_4_1_0() { return cTypeParametersTypeParameterParserRuleCall_4_1_0; }

		//("," typeParameters+=TypeParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//typeParameters+=TypeParameter
		public Assignment getTypeParametersAssignment_4_2_1() { return cTypeParametersAssignment_4_2_1; }

		//TypeParameter
		public RuleCall getTypeParametersTypeParameterParserRuleCall_4_2_1_0() { return cTypeParametersTypeParameterParserRuleCall_4_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_3() { return cGreaterThanSignKeyword_4_3; }

		//("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//attributes+=Parameter
		public Assignment getAttributesAssignment_5_1() { return cAttributesAssignment_5_1; }

		//Parameter
		public RuleCall getAttributesParameterParserRuleCall_5_1_0() { return cAttributesParameterParserRuleCall_5_1_0; }

		//("," attributes+=Parameter)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//attributes+=Parameter
		public Assignment getAttributesAssignment_5_2_1() { return cAttributesAssignment_5_2_1; }

		//Parameter
		public RuleCall getAttributesParameterParserRuleCall_5_2_1_0() { return cAttributesParameterParserRuleCall_5_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_3() { return cRightParenthesisKeyword_5_3; }

		//((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?)?
		public Group getGroup_6() { return cGroup_6; }

		//(ports+=TypedInputPort ("," ports+=TypedInputPort)*)?
		public Group getGroup_6_0() { return cGroup_6_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_6_0_0() { return cPortsAssignment_6_0_0; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_6_0_0_0() { return cPortsTypedInputPortParserRuleCall_6_0_0_0; }

		//("," ports+=TypedInputPort)*
		public Group getGroup_6_0_1() { return cGroup_6_0_1; }

		//","
		public Keyword getCommaKeyword_6_0_1_0() { return cCommaKeyword_6_0_1_0; }

		//ports+=TypedInputPort
		public Assignment getPortsAssignment_6_0_1_1() { return cPortsAssignment_6_0_1_1; }

		//TypedInputPort
		public RuleCall getPortsTypedInputPortParserRuleCall_6_0_1_1_0() { return cPortsTypedInputPortParserRuleCall_6_0_1_1_0; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_6_1() { return cMAPS_TOParserRuleCall_6_1; }

		//(ports+=TypedOutputPort ("," ports+=TypedOutputPort)*)?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_6_2_0() { return cPortsAssignment_6_2_0; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_6_2_0_0() { return cPortsTypedOutputPortParserRuleCall_6_2_0_0; }

		//("," ports+=TypedOutputPort)*
		public Group getGroup_6_2_1() { return cGroup_6_2_1; }

		//","
		public Keyword getCommaKeyword_6_2_1_0() { return cCommaKeyword_6_2_1_0; }

		//ports+=TypedOutputPort
		public Assignment getPortsAssignment_6_2_1_1() { return cPortsAssignment_6_2_1_1; }

		//TypedOutputPort
		public RuleCall getPortsTypedOutputPortParserRuleCall_6_2_1_1_0() { return cPortsTypedOutputPortParserRuleCall_6_2_1_1_0; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//attributes+=InjectableAttribute*
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }

		//InjectableAttribute
		public RuleCall getAttributesInjectableAttributeParserRuleCall_8_0() { return cAttributesInjectableAttributeParserRuleCall_8_0; }

		//("var" (attributes+=Variable ";")*)?
		public Group getGroup_9() { return cGroup_9; }

		//"var"
		public Keyword getVarKeyword_9_0() { return cVarKeyword_9_0; }

		//(attributes+=Variable ";")*
		public Group getGroup_9_1() { return cGroup_9_1; }

		//attributes+=Variable
		public Assignment getAttributesAssignment_9_1_0() { return cAttributesAssignment_9_1_0; }

		//Variable
		public RuleCall getAttributesVariableParserRuleCall_9_1_0_0() { return cAttributesVariableParserRuleCall_9_1_0_0; }

		//";"
		public Keyword getSemicolonKeyword_9_1_1() { return cSemicolonKeyword_9_1_1; }

		//"entities" entities+=TypedAtomicActorInstance*
		public Group getGroup_10() { return cGroup_10; }

		//"entities"
		public Keyword getEntitiesKeyword_10_0() { return cEntitiesKeyword_10_0; }

		//entities+=TypedAtomicActorInstance*
		public Assignment getEntitiesAssignment_10_1() { return cEntitiesAssignment_10_1; }

		//TypedAtomicActorInstance
		public RuleCall getEntitiesTypedAtomicActorInstanceParserRuleCall_10_1_0() { return cEntitiesTypedAtomicActorInstanceParserRuleCall_10_1_0; }

		//("structure" relations+=ConversionRelation*)?
		public Group getGroup_11() { return cGroup_11; }

		//"structure"
		public Keyword getStructureKeyword_11_0() { return cStructureKeyword_11_0; }

		//relations+=ConversionRelation*
		public Assignment getRelationsAssignment_11_1() { return cRelationsAssignment_11_1; }

		//ConversionRelation
		public RuleCall getRelationsConversionRelationParserRuleCall_11_1_0() { return cRelationsConversionRelationParserRuleCall_11_1_0; }

		//"end"
		public Keyword getEndKeyword_12() { return cEndKeyword_12; }
	}

	public class InjectableAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InjectableAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDisplayNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cDisplayNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommercialAtKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		
		//InjectableAttribute:
		//	"-" type=JvmTypeReference name=ValidID displayName=STRING? ("@" attributes+=AnnotationAttribute)*;
		public ParserRule getRule() { return rule; }

		//"-" type=JvmTypeReference name=ValidID displayName=STRING? ("@" attributes+=AnnotationAttribute)*
		public Group getGroup() { return cGroup; }

		//"-"
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_0() { return cTypeJvmTypeReferenceParserRuleCall_1_0; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_3() { return cDisplayNameAssignment_3; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_3_0() { return cDisplayNameSTRINGTerminalRuleCall_3_0; }

		//("@" attributes+=AnnotationAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//"@"
		public Keyword getCommercialAtKeyword_4_0() { return cCommercialAtKeyword_4_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_4_1_0() { return cAttributesAnnotationAttributeParserRuleCall_4_1_0; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDisplayNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDisplayNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cOpSingleAssignParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cValueExpressionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueExpressionXInitExpressionParserRuleCall_3_1_0 = (RuleCall)cValueExpressionAssignment_3_1.eContents().get(0);
		
		//Variable:
		//	type=JvmTypeReference name=ValidID displayName=STRING? (OpSingleAssign valueExpression=XInitExpression)?;
		public ParserRule getRule() { return rule; }

		//type=JvmTypeReference name=ValidID displayName=STRING? (OpSingleAssign valueExpression=XInitExpression)?
		public Group getGroup() { return cGroup; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_0() { return cTypeJvmTypeReferenceParserRuleCall_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_2() { return cDisplayNameAssignment_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_2_0() { return cDisplayNameSTRINGTerminalRuleCall_2_0; }

		//(OpSingleAssign valueExpression=XInitExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//OpSingleAssign
		public RuleCall getOpSingleAssignParserRuleCall_3_0() { return cOpSingleAssignParserRuleCall_3_0; }

		//valueExpression=XInitExpression
		public Assignment getValueExpressionAssignment_3_1() { return cValueExpressionAssignment_3_1; }

		//XInitExpression
		public RuleCall getValueExpressionXInitExpressionParserRuleCall_3_1_0() { return cValueExpressionXInitExpressionParserRuleCall_3_1_0; }
	}

	public class XInitExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XInitExpression");
		private final RuleCall cXOrExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XInitExpression returns xbase::XExpression:
		//	XOrExpression;
		public ParserRule getRule() { return rule; }

		//XOrExpression
		public RuleCall getXOrExpressionParserRuleCall() { return cXOrExpressionParserRuleCall; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDisplayNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDisplayNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueExpressionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueExpressionXInitExpressionParserRuleCall_3_1_0 = (RuleCall)cValueExpressionAssignment_3_1.eContents().get(0);
		
		//Parameter returns ActorParameter:
		//	type=JvmTypeReference name=ValidID displayName=STRING? ("=" valueExpression=XInitExpression)?;
		public ParserRule getRule() { return rule; }

		//type=JvmTypeReference name=ValidID displayName=STRING? ("=" valueExpression=XInitExpression)?
		public Group getGroup() { return cGroup; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_0() { return cTypeJvmTypeReferenceParserRuleCall_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_2() { return cDisplayNameAssignment_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_2_0() { return cDisplayNameSTRINGTerminalRuleCall_2_0; }

		//("=" valueExpression=XInitExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"="
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }

		//valueExpression=XInitExpression
		public Assignment getValueExpressionAssignment_3_1() { return cValueExpressionAssignment_3_1; }

		//XInitExpression
		public RuleCall getValueExpressionXInitExpressionParserRuleCall_3_1_0() { return cValueExpressionXInitExpressionParserRuleCall_3_1_0; }
	}

	public class AnnotationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueExpressionXInitExpressionParserRuleCall_3_0 = (RuleCall)cValueExpressionAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AnnotationAttribute returns Variable:
		//	type=JvmParameterizedTypeReference? name=ValidID "=" valueExpression=XInitExpression ";";
		public ParserRule getRule() { return rule; }

		//type=JvmParameterizedTypeReference? name=ValidID "=" valueExpression=XInitExpression ";"
		public Group getGroup() { return cGroup; }

		//type=JvmParameterizedTypeReference?
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_0_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//valueExpression=XInitExpression
		public Assignment getValueExpressionAssignment_3() { return cValueExpressionAssignment_3; }

		//XInitExpression
		public RuleCall getValueExpressionXInitExpressionParserRuleCall_3_0() { return cValueExpressionXInitExpressionParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class TypedInputPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedInputPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRateAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRateINTTerminalRuleCall_1_1_0 = (RuleCall)cRateAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMultiportAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cMultiportAsteriskKeyword_2_0 = (Keyword)cMultiportAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cDisplayNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cDisplayNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommercialAtKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttributesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_5_1_0 = (RuleCall)cAttributesAssignment_5_1.eContents().get(0);
		
		//TypedInputPort:
		//	type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
		//	attributes+=AnnotationAttribute)*;
		public ParserRule getRule() { return rule; }

		//type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
		//attributes+=AnnotationAttribute)*
		public Group getGroup() { return cGroup; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_0_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0; }

		//("[" rate=INT "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//rate=INT
		public Assignment getRateAssignment_1_1() { return cRateAssignment_1_1; }

		//INT
		public RuleCall getRateINTTerminalRuleCall_1_1_0() { return cRateINTTerminalRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//multiport?="*"?
		public Assignment getMultiportAssignment_2() { return cMultiportAssignment_2; }

		//"*"
		public Keyword getMultiportAsteriskKeyword_2_0() { return cMultiportAsteriskKeyword_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_4() { return cDisplayNameAssignment_4; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_4_0() { return cDisplayNameSTRINGTerminalRuleCall_4_0; }

		//("@" attributes+=AnnotationAttribute)*
		public Group getGroup_5() { return cGroup_5; }

		//"@"
		public Keyword getCommercialAtKeyword_5_0() { return cCommercialAtKeyword_5_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_5_1() { return cAttributesAssignment_5_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_5_1_0() { return cAttributesAnnotationAttributeParserRuleCall_5_1_0; }
	}

	public class TypedOutputPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedOutputPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRateAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRateINTTerminalRuleCall_1_1_0 = (RuleCall)cRateAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMultiportAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cMultiportAsteriskKeyword_2_0 = (Keyword)cMultiportAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cDisplayNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cDisplayNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommercialAtKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttributesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_5_1_0 = (RuleCall)cAttributesAssignment_5_1.eContents().get(0);
		
		//TypedOutputPort:
		//	type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
		//	attributes+=AnnotationAttribute)*;
		public ParserRule getRule() { return rule; }

		//type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
		//attributes+=AnnotationAttribute)*
		public Group getGroup() { return cGroup; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_0_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0; }

		//("[" rate=INT "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//rate=INT
		public Assignment getRateAssignment_1_1() { return cRateAssignment_1_1; }

		//INT
		public RuleCall getRateINTTerminalRuleCall_1_1_0() { return cRateINTTerminalRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//multiport?="*"?
		public Assignment getMultiportAssignment_2() { return cMultiportAssignment_2; }

		//"*"
		public Keyword getMultiportAsteriskKeyword_2_0() { return cMultiportAsteriskKeyword_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_4() { return cDisplayNameAssignment_4; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_4_0() { return cDisplayNameSTRINGTerminalRuleCall_4_0; }

		//("@" attributes+=AnnotationAttribute)*
		public Group getGroup_5() { return cGroup_5; }

		//"@"
		public Keyword getCommercialAtKeyword_5_0() { return cCommercialAtKeyword_5_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_5_1() { return cAttributesAssignment_5_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_5_1_0() { return cAttributesAnnotationAttributeParserRuleCall_5_1_0; }
	}

	public class RPIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RPID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//RPID:
		//	ID ("." ID)?;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)?
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ConversionRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConversionRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourcePortAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourcePortPortCrossReference_0_0 = (CrossReference)cSourcePortAssignment_0.eContents().get(0);
		private final RuleCall cSourcePortPortRPIDParserRuleCall_0_0_1 = (RuleCall)cSourcePortPortCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTargetPortsAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cTargetPortsPortCrossReference_1_0_1_0 = (CrossReference)cTargetPortsAssignment_1_0_1.eContents().get(0);
		private final RuleCall cTargetPortsPortRPIDParserRuleCall_1_0_1_0_1 = (RuleCall)cTargetPortsPortCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_2 = (Group)cGroup_1_0.eContents().get(2);
		private final Keyword cCommaKeyword_1_0_2_0 = (Keyword)cGroup_1_0_2.eContents().get(0);
		private final Assignment cTargetPortsAssignment_1_0_2_1 = (Assignment)cGroup_1_0_2.eContents().get(1);
		private final CrossReference cTargetPortsPortCrossReference_1_0_2_1_0 = (CrossReference)cTargetPortsAssignment_1_0_2_1.eContents().get(0);
		private final RuleCall cTargetPortsPortRPIDParserRuleCall_1_0_2_1_0_1 = (RuleCall)cTargetPortsPortCrossReference_1_0_2_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cHyphenMinusHyphenMinusKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Assignment cValueVarAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final RuleCall cValueVarValidIDParserRuleCall_1_1_1_0_0 = (RuleCall)cValueVarAssignment_1_1_1_0.eContents().get(0);
		private final Keyword cVerticalLineKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Assignment cConversionExpressionAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cConversionExpressionXExpressionParserRuleCall_1_1_2_0 = (RuleCall)cConversionExpressionAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cGroup_1_1.eContents().get(3);
		private final Keyword cWhenKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_1_1_3_1_0 = (RuleCall)cGuardExpressionAssignment_1_1_3_1.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		private final Assignment cTargetPortsAssignment_1_1_5 = (Assignment)cGroup_1_1.eContents().get(5);
		private final CrossReference cTargetPortsPortCrossReference_1_1_5_0 = (CrossReference)cTargetPortsAssignment_1_1_5.eContents().get(0);
		private final RuleCall cTargetPortsPortRPIDParserRuleCall_1_1_5_0_1 = (RuleCall)cTargetPortsPortCrossReference_1_1_5_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Assignment cDisplayNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cDisplayNameAssignment_2_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ConversionRelation:
		//	sourcePort=[Port|RPID] ("-->" targetPorts+=[Port|RPID] ("," targetPorts+=[Port|RPID])* | "--" (valueVar=ValidID "|")?
		//	conversionExpression=XExpression? ("when" guardExpression=XExpression)? "-->" targetPorts+=[Port|RPID]) ("as"
		//	name=ValidID displayName=STRING?)? ";"?;
		public ParserRule getRule() { return rule; }

		//sourcePort=[Port|RPID] ("-->" targetPorts+=[Port|RPID] ("," targetPorts+=[Port|RPID])* | "--" (valueVar=ValidID "|")?
		//conversionExpression=XExpression? ("when" guardExpression=XExpression)? "-->" targetPorts+=[Port|RPID]) ("as"
		//name=ValidID displayName=STRING?)? ";"?
		public Group getGroup() { return cGroup; }

		//sourcePort=[Port|RPID]
		public Assignment getSourcePortAssignment_0() { return cSourcePortAssignment_0; }

		//[Port|RPID]
		public CrossReference getSourcePortPortCrossReference_0_0() { return cSourcePortPortCrossReference_0_0; }

		//RPID
		public RuleCall getSourcePortPortRPIDParserRuleCall_0_0_1() { return cSourcePortPortRPIDParserRuleCall_0_0_1; }

		//"-->" targetPorts+=[Port|RPID] ("," targetPorts+=[Port|RPID])* | "--" (valueVar=ValidID "|")?
		//conversionExpression=XExpression? ("when" guardExpression=XExpression)? "-->" targetPorts+=[Port|RPID]
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"-->" targetPorts+=[Port|RPID] ("," targetPorts+=[Port|RPID])*
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"-->"
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0_0() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0_0; }

		//targetPorts+=[Port|RPID]
		public Assignment getTargetPortsAssignment_1_0_1() { return cTargetPortsAssignment_1_0_1; }

		//[Port|RPID]
		public CrossReference getTargetPortsPortCrossReference_1_0_1_0() { return cTargetPortsPortCrossReference_1_0_1_0; }

		//RPID
		public RuleCall getTargetPortsPortRPIDParserRuleCall_1_0_1_0_1() { return cTargetPortsPortRPIDParserRuleCall_1_0_1_0_1; }

		//("," targetPorts+=[Port|RPID])*
		public Group getGroup_1_0_2() { return cGroup_1_0_2; }

		//","
		public Keyword getCommaKeyword_1_0_2_0() { return cCommaKeyword_1_0_2_0; }

		//targetPorts+=[Port|RPID]
		public Assignment getTargetPortsAssignment_1_0_2_1() { return cTargetPortsAssignment_1_0_2_1; }

		//[Port|RPID]
		public CrossReference getTargetPortsPortCrossReference_1_0_2_1_0() { return cTargetPortsPortCrossReference_1_0_2_1_0; }

		//RPID
		public RuleCall getTargetPortsPortRPIDParserRuleCall_1_0_2_1_0_1() { return cTargetPortsPortRPIDParserRuleCall_1_0_2_1_0_1; }

		//"--" (valueVar=ValidID "|")? conversionExpression=XExpression? ("when" guardExpression=XExpression)? "-->"
		//targetPorts+=[Port|RPID]
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"--"
		public Keyword getHyphenMinusHyphenMinusKeyword_1_1_0() { return cHyphenMinusHyphenMinusKeyword_1_1_0; }

		//(valueVar=ValidID "|")?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//valueVar=ValidID
		public Assignment getValueVarAssignment_1_1_1_0() { return cValueVarAssignment_1_1_1_0; }

		//ValidID
		public RuleCall getValueVarValidIDParserRuleCall_1_1_1_0_0() { return cValueVarValidIDParserRuleCall_1_1_1_0_0; }

		//"|"
		public Keyword getVerticalLineKeyword_1_1_1_1() { return cVerticalLineKeyword_1_1_1_1; }

		//conversionExpression=XExpression?
		public Assignment getConversionExpressionAssignment_1_1_2() { return cConversionExpressionAssignment_1_1_2; }

		//XExpression
		public RuleCall getConversionExpressionXExpressionParserRuleCall_1_1_2_0() { return cConversionExpressionXExpressionParserRuleCall_1_1_2_0; }

		//("when" guardExpression=XExpression)?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }

		//"when"
		public Keyword getWhenKeyword_1_1_3_0() { return cWhenKeyword_1_1_3_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_1_1_3_1() { return cGuardExpressionAssignment_1_1_3_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_1_1_3_1_0() { return cGuardExpressionXExpressionParserRuleCall_1_1_3_1_0; }

		//"-->"
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_1_4() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_1_1_4; }

		//targetPorts+=[Port|RPID]
		public Assignment getTargetPortsAssignment_1_1_5() { return cTargetPortsAssignment_1_1_5; }

		//[Port|RPID]
		public CrossReference getTargetPortsPortCrossReference_1_1_5_0() { return cTargetPortsPortCrossReference_1_1_5_0; }

		//RPID
		public RuleCall getTargetPortsPortRPIDParserRuleCall_1_1_5_0_1() { return cTargetPortsPortRPIDParserRuleCall_1_1_5_0_1; }

		//("as" name=ValidID displayName=STRING?)?
		public Group getGroup_2() { return cGroup_2; }

		//"as"
		public Keyword getAsKeyword_2_0() { return cAsKeyword_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_1_0() { return cNameValidIDParserRuleCall_2_1_0; }

		//displayName=STRING?
		public Assignment getDisplayNameAssignment_2_2() { return cDisplayNameAssignment_2_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_2_2_0() { return cDisplayNameSTRINGTerminalRuleCall_2_2_0; }

		//";"?
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class AtomicActorImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtomicActorImpl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJavaActorImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCaltropActorImplParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AtomicActorImpl:
		//	JavaActorImpl | CaltropActorImpl;
		public ParserRule getRule() { return rule; }

		//JavaActorImpl | CaltropActorImpl
		public Alternatives getAlternatives() { return cAlternatives; }

		//JavaActorImpl
		public RuleCall getJavaActorImplParserRuleCall_0() { return cJavaActorImplParserRuleCall_0; }

		//CaltropActorImpl
		public RuleCall getCaltropActorImplParserRuleCall_1() { return cCaltropActorImplParserRuleCall_1; }
	}

	public class JavaActorImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JavaActorImpl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImplementationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//JavaActorImpl:
		//	"implementation" type=JvmParameterizedTypeReference;
		public ParserRule getRule() { return rule; }

		//"implementation" type=JvmParameterizedTypeReference
		public Group getGroup() { return cGroup; }

		//"implementation"
		public Keyword getImplementationKeyword_0() { return cImplementationKeyword_0; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_1_0; }
	}

	public class CaltropActorImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CaltropActorImpl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCaltropActorImplAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cDeclarationsAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cDeclarationsStateVariableParserRuleCall_2_0_0 = (RuleCall)cDeclarationsAssignment_2_0.eContents().get(0);
		private final Assignment cInitActionsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cInitActionsInitActionParserRuleCall_2_1_0 = (RuleCall)cInitActionsAssignment_2_1.eContents().get(0);
		private final Assignment cActionsAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cActionsReActionParserRuleCall_2_2_0 = (RuleCall)cActionsAssignment_2_2.eContents().get(0);
		private final Assignment cFunctionsAssignment_2_3 = (Assignment)cAlternatives_2.eContents().get(3);
		private final Alternatives cFunctionsAlternatives_2_3_0 = (Alternatives)cFunctionsAssignment_2_3.eContents().get(0);
		private final RuleCall cFunctionsFunctionDeclarationParserRuleCall_2_3_0_0 = (RuleCall)cFunctionsAlternatives_2_3_0.eContents().get(0);
		private final RuleCall cFunctionsProcedureDeclarationParserRuleCall_2_3_0_1 = (RuleCall)cFunctionsAlternatives_2_3_0.eContents().get(1);
		private final Assignment cScheduleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cScheduleScheduleParserRuleCall_3_0 = (RuleCall)cScheduleAssignment_3.eContents().get(0);
		
		//// Caltrop stuff
		//CaltropActorImpl:
		//	{CaltropActorImpl} ":" (declarations+=StateVariable | initActions+=InitAction | actions+=ReAction |
		//	functions+=(FunctionDeclaration | ProcedureDeclaration))* schedule=Schedule?;
		public ParserRule getRule() { return rule; }

		//{CaltropActorImpl} ":" (declarations+=StateVariable | initActions+=InitAction | actions+=ReAction |
		//functions+=(FunctionDeclaration | ProcedureDeclaration))* schedule=Schedule?
		public Group getGroup() { return cGroup; }

		//{CaltropActorImpl}
		public Action getCaltropActorImplAction_0() { return cCaltropActorImplAction_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//(declarations+=StateVariable | initActions+=InitAction | actions+=ReAction | functions+=(FunctionDeclaration |
		//ProcedureDeclaration))*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//declarations+=StateVariable
		public Assignment getDeclarationsAssignment_2_0() { return cDeclarationsAssignment_2_0; }

		//StateVariable
		public RuleCall getDeclarationsStateVariableParserRuleCall_2_0_0() { return cDeclarationsStateVariableParserRuleCall_2_0_0; }

		//initActions+=InitAction
		public Assignment getInitActionsAssignment_2_1() { return cInitActionsAssignment_2_1; }

		//InitAction
		public RuleCall getInitActionsInitActionParserRuleCall_2_1_0() { return cInitActionsInitActionParserRuleCall_2_1_0; }

		//actions+=ReAction
		public Assignment getActionsAssignment_2_2() { return cActionsAssignment_2_2; }

		//ReAction
		public RuleCall getActionsReActionParserRuleCall_2_2_0() { return cActionsReActionParserRuleCall_2_2_0; }

		//functions+=(FunctionDeclaration | ProcedureDeclaration)
		public Assignment getFunctionsAssignment_2_3() { return cFunctionsAssignment_2_3; }

		//FunctionDeclaration | ProcedureDeclaration
		public Alternatives getFunctionsAlternatives_2_3_0() { return cFunctionsAlternatives_2_3_0; }

		//FunctionDeclaration
		public RuleCall getFunctionsFunctionDeclarationParserRuleCall_2_3_0_0() { return cFunctionsFunctionDeclarationParserRuleCall_2_3_0_0; }

		//ProcedureDeclaration
		public RuleCall getFunctionsProcedureDeclarationParserRuleCall_2_3_0_1() { return cFunctionsProcedureDeclarationParserRuleCall_2_3_0_1; }

		//schedule=Schedule?
		public Assignment getScheduleAssignment_3() { return cScheduleAssignment_3; }

		//Schedule
		public RuleCall getScheduleScheduleParserRuleCall_3_0() { return cScheduleScheduleParserRuleCall_3_0; }
	}

	public class FunctionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParametersFunctionParameterParserRuleCall_3_0_0 = (RuleCall)cParametersAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParametersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParametersFunctionParameterParserRuleCall_3_1_1_0 = (RuleCall)cParametersAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cBodyExpressionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBodyExpressionXBodyExpressionParserRuleCall_8_0 = (RuleCall)cBodyExpressionAssignment_8.eContents().get(0);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//FunctionDeclaration:
		//	"function" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" "-->"
		//	type=JvmTypeReference ":" bodyExpression=XBodyExpression "end";
		public ParserRule getRule() { return rule; }

		//"function" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" "-->"
		//type=JvmTypeReference ":" bodyExpression=XBodyExpression "end"
		public Group getGroup() { return cGroup; }

		//"function"
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameters+=FunctionParameter
		public Assignment getParametersAssignment_3_0() { return cParametersAssignment_3_0; }

		//FunctionParameter
		public RuleCall getParametersFunctionParameterParserRuleCall_3_0_0() { return cParametersFunctionParameterParserRuleCall_3_0_0; }

		//("," parameters+=FunctionParameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameters+=FunctionParameter
		public Assignment getParametersAssignment_3_1_1() { return cParametersAssignment_3_1_1; }

		//FunctionParameter
		public RuleCall getParametersFunctionParameterParserRuleCall_3_1_1_0() { return cParametersFunctionParameterParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"-->"
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_5() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_5; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_6_0() { return cTypeJvmTypeReferenceParserRuleCall_6_0; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//bodyExpression=XBodyExpression
		public Assignment getBodyExpressionAssignment_8() { return cBodyExpressionAssignment_8; }

		//XBodyExpression
		public RuleCall getBodyExpressionXBodyExpressionParserRuleCall_8_0() { return cBodyExpressionXBodyExpressionParserRuleCall_8_0; }

		//"end"
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }
	}

	public class ProcedureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcedureDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcedureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParametersFunctionParameterParserRuleCall_3_0_0 = (RuleCall)cParametersAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParametersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParametersFunctionParameterParserRuleCall_3_1_1_0 = (RuleCall)cParametersAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBodyExpressionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBodyExpressionXBodyExpressionParserRuleCall_6_0 = (RuleCall)cBodyExpressionAssignment_6.eContents().get(0);
		private final Keyword cEndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ProcedureDeclaration returns FunctionDeclaration:
		//	"procedure" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" ":"
		//	bodyExpression=XBodyExpression "end";
		public ParserRule getRule() { return rule; }

		//"procedure" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" ":"
		//bodyExpression=XBodyExpression "end"
		public Group getGroup() { return cGroup; }

		//"procedure"
		public Keyword getProcedureKeyword_0() { return cProcedureKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameters+=FunctionParameter
		public Assignment getParametersAssignment_3_0() { return cParametersAssignment_3_0; }

		//FunctionParameter
		public RuleCall getParametersFunctionParameterParserRuleCall_3_0_0() { return cParametersFunctionParameterParserRuleCall_3_0_0; }

		//("," parameters+=FunctionParameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameters+=FunctionParameter
		public Assignment getParametersAssignment_3_1_1() { return cParametersAssignment_3_1_1; }

		//FunctionParameter
		public RuleCall getParametersFunctionParameterParserRuleCall_3_1_1_0() { return cParametersFunctionParameterParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//bodyExpression=XBodyExpression
		public Assignment getBodyExpressionAssignment_6() { return cBodyExpressionAssignment_6; }

		//XBodyExpression
		public RuleCall getBodyExpressionXBodyExpressionParserRuleCall_6_0() { return cBodyExpressionXBodyExpressionParserRuleCall_6_0; }

		//"end"
		public Keyword getEndKeyword_7() { return cEndKeyword_7; }
	}

	public class FunctionParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FunctionParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//FunctionParameter returns JvmTypedObj:
		//	type=JvmTypeReference name=ValidID;
		public ParserRule getRule() { return rule; }

		//type=JvmTypeReference name=ValidID
		public Group getGroup() { return cGroup; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_0_0() { return cTypeJvmTypeReferenceParserRuleCall_0_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
	}

	public class StateVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAttributesAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_0_1_0 = (RuleCall)cAttributesAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cConstantAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cConstantValKeyword_1_0_0 = (Keyword)cConstantAssignment_1_0.eContents().get(0);
		private final Keyword cVarKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cRealmAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRealmRealmParserRuleCall_2_0 = (RuleCall)cRealmAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_0_0 = (Alternatives)cGroup_5_0.eContents().get(0);
		private final Assignment cBindingAssignment_5_0_0_0 = (Assignment)cAlternatives_5_0_0.eContents().get(0);
		private final Keyword cBindingColonEqualsSignKeyword_5_0_0_0_0 = (Keyword)cBindingAssignment_5_0_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_0_0_1 = (Keyword)cAlternatives_5_0_0.eContents().get(1);
		private final Assignment cValueExpressionAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final RuleCall cValueExpressionXInitExpressionParserRuleCall_5_0_1_0 = (RuleCall)cValueExpressionAssignment_5_0_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cUpdateKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cUpdateExpressionAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cUpdateExpressionXExpressionParserRuleCall_5_1_1_0 = (RuleCall)cUpdateExpressionAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//StateVariable:
		//	("@" attributes+=AnnotationAttribute)* (constant?="val" | "var") realm=Realm? type=JvmTypeReference name=ValidID
		//	(((binding?=":=" | "=") valueExpression=XInitExpression)? ("update" updateExpression=XExpression)? ";")?;
		public ParserRule getRule() { return rule; }

		//("@" attributes+=AnnotationAttribute)* (constant?="val" | "var") realm=Realm? type=JvmTypeReference name=ValidID
		//(((binding?=":=" | "=") valueExpression=XInitExpression)? ("update" updateExpression=XExpression)? ";")?
		public Group getGroup() { return cGroup; }

		//("@" attributes+=AnnotationAttribute)*
		public Group getGroup_0() { return cGroup_0; }

		//"@"
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_0_1() { return cAttributesAssignment_0_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_0_1_0() { return cAttributesAnnotationAttributeParserRuleCall_0_1_0; }

		//constant?="val" | "var"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//constant?="val"
		public Assignment getConstantAssignment_1_0() { return cConstantAssignment_1_0; }

		//"val"
		public Keyword getConstantValKeyword_1_0_0() { return cConstantValKeyword_1_0_0; }

		//"var"
		public Keyword getVarKeyword_1_1() { return cVarKeyword_1_1; }

		//realm=Realm?
		public Assignment getRealmAssignment_2() { return cRealmAssignment_2; }

		//Realm
		public RuleCall getRealmRealmParserRuleCall_2_0() { return cRealmRealmParserRuleCall_2_0; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_3_0() { return cTypeJvmTypeReferenceParserRuleCall_3_0; }

		//name=ValidID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_4_0() { return cNameValidIDParserRuleCall_4_0; }

		//(((binding?=":=" | "=") valueExpression=XInitExpression)? ("update" updateExpression=XExpression)? ";")?
		public Group getGroup_5() { return cGroup_5; }

		//((binding?=":=" | "=") valueExpression=XInitExpression)?
		public Group getGroup_5_0() { return cGroup_5_0; }

		//binding?=":=" | "="
		public Alternatives getAlternatives_5_0_0() { return cAlternatives_5_0_0; }

		//binding?=":="
		public Assignment getBindingAssignment_5_0_0_0() { return cBindingAssignment_5_0_0_0; }

		//":="
		public Keyword getBindingColonEqualsSignKeyword_5_0_0_0_0() { return cBindingColonEqualsSignKeyword_5_0_0_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_0_0_1() { return cEqualsSignKeyword_5_0_0_1; }

		//valueExpression=XInitExpression
		public Assignment getValueExpressionAssignment_5_0_1() { return cValueExpressionAssignment_5_0_1; }

		//XInitExpression
		public RuleCall getValueExpressionXInitExpressionParserRuleCall_5_0_1_0() { return cValueExpressionXInitExpressionParserRuleCall_5_0_1_0; }

		//("update" updateExpression=XExpression)?
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"update"
		public Keyword getUpdateKeyword_5_1_0() { return cUpdateKeyword_5_1_0; }

		//updateExpression=XExpression
		public Assignment getUpdateExpressionAssignment_5_1_1() { return cUpdateExpressionAssignment_5_1_1; }

		//XExpression
		public RuleCall getUpdateExpressionXExpressionParserRuleCall_5_1_1_0() { return cUpdateExpressionXExpressionParserRuleCall_5_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5_2() { return cSemicolonKeyword_5_2; }
	}

	public class RealmElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Realm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cKeyAlternatives_1_0 = (Alternatives)cKeyAssignment_1.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_1_0_0 = (RuleCall)cKeyAlternatives_1_0.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_1_0_1 = (RuleCall)cKeyAlternatives_1_0.eContents().get(1);
		
		//Realm:
		//	"@" key=(ID | STRING);
		public ParserRule getRule() { return rule; }

		//"@" key=(ID | STRING)
		public Group getGroup() { return cGroup; }

		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//key=(ID | STRING)
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//ID | STRING
		public Alternatives getKeyAlternatives_1_0() { return cKeyAlternatives_1_0; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_1_0_0() { return cKeyIDTerminalRuleCall_1_0_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_1_0_1() { return cKeySTRINGTerminalRuleCall_1_0_1; }
	}

	public class InitActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOutputActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cInitializeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cMAPS_TOParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cOutputPatternsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_4_0_0 = (RuleCall)cOutputPatternsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cOutputPatternsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_4_1_1_0 = (RuleCall)cOutputPatternsAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cGuardKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_5_1_0 = (RuleCall)cGuardExpressionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDoKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBodyExpressionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBodyExpressionXBodyExpressionParserRuleCall_6_1_0 = (RuleCall)cBodyExpressionAssignment_6_1.eContents().get(0);
		private final Keyword cEndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//InitAction returns OutputAction:
		//	{OutputAction} (name=ValidID ":")? "initialize" MAPS_TO (outputPatterns+=OutputPattern (","
		//	outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
		//	("do" bodyExpression=XBodyExpression)? "end";
		public ParserRule getRule() { return rule; }

		//{OutputAction} (name=ValidID ":")? "initialize" MAPS_TO (outputPatterns+=OutputPattern (","
		//outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
		//("do" bodyExpression=XBodyExpression)? "end"
		public Group getGroup() { return cGroup; }

		//{OutputAction}
		public Action getOutputActionAction_0() { return cOutputActionAction_0; }

		//(name=ValidID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=ValidID
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0_0() { return cNameValidIDParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"initialize"
		public Keyword getInitializeKeyword_2() { return cInitializeKeyword_2; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_3() { return cMAPS_TOParserRuleCall_3; }

		//(outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)?
		public Group getGroup_4() { return cGroup_4; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_4_0() { return cOutputPatternsAssignment_4_0; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_4_0_0() { return cOutputPatternsOutputPatternParserRuleCall_4_0_0; }

		//("," outputPatterns+=OutputPattern)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_4_1_1() { return cOutputPatternsAssignment_4_1_1; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_4_1_1_0() { return cOutputPatternsOutputPatternParserRuleCall_4_1_1_0; }

		//("guard" guardExpression=XExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"guard"
		public Keyword getGuardKeyword_5_0() { return cGuardKeyword_5_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_5_1() { return cGuardExpressionAssignment_5_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_5_1_0() { return cGuardExpressionXExpressionParserRuleCall_5_1_0; }

		//("do" bodyExpression=XBodyExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//"do"
		public Keyword getDoKeyword_6_0() { return cDoKeyword_6_0; }

		//bodyExpression=XBodyExpression
		public Assignment getBodyExpressionAssignment_6_1() { return cBodyExpressionAssignment_6_1; }

		//XBodyExpression
		public RuleCall getBodyExpressionXBodyExpressionParserRuleCall_6_1_0() { return cBodyExpressionXBodyExpressionParserRuleCall_6_1_0; }

		//"end"
		public Keyword getEndKeyword_7() { return cEndKeyword_7; }
	}

	public class OutputPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutputPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOutputPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cPortRefAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cPortRefPortCrossReference_1_0_0 = (CrossReference)cPortRefAssignment_1_0.eContents().get(0);
		private final RuleCall cPortRefPortValidIDParserRuleCall_1_0_0_1 = (RuleCall)cPortRefPortCrossReference_1_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cValueExpressionsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cValueExpressionsXExpressionParserRuleCall_3_0_0 = (RuleCall)cValueExpressionsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cValueExpressionsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cValueExpressionsXExpressionParserRuleCall_3_1_1_0 = (RuleCall)cValueExpressionsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRepeatKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRepeatExpressionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRepeatExpressionXExpressionParserRuleCall_5_1_0 = (RuleCall)cRepeatExpressionAssignment_5_1.eContents().get(0);
		private final Assignment cChannelsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cChannelsChannelSelectorParserRuleCall_6_0 = (RuleCall)cChannelsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWhenKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_7_1_0 = (RuleCall)cGuardExpressionAssignment_7_1.eContents().get(0);
		
		//OutputPattern:
		//	{OutputPattern} (portRef=[Port|ValidID] ":")? "[" (valueExpressions+=XExpression (","
		//	valueExpressions+=XExpression)*)? "]" ("repeat" repeatExpression=XExpression)? channels=ChannelSelector? ("when"
		//	guardExpression=XExpression)?;
		public ParserRule getRule() { return rule; }

		//{OutputPattern} (portRef=[Port|ValidID] ":")? "[" (valueExpressions+=XExpression ("," valueExpressions+=XExpression)*)?
		//"]" ("repeat" repeatExpression=XExpression)? channels=ChannelSelector? ("when" guardExpression=XExpression)?
		public Group getGroup() { return cGroup; }

		//{OutputPattern}
		public Action getOutputPatternAction_0() { return cOutputPatternAction_0; }

		//(portRef=[Port|ValidID] ":")?
		public Group getGroup_1() { return cGroup_1; }

		//portRef=[Port|ValidID]
		public Assignment getPortRefAssignment_1_0() { return cPortRefAssignment_1_0; }

		//[Port|ValidID]
		public CrossReference getPortRefPortCrossReference_1_0_0() { return cPortRefPortCrossReference_1_0_0; }

		//ValidID
		public RuleCall getPortRefPortValidIDParserRuleCall_1_0_0_1() { return cPortRefPortValidIDParserRuleCall_1_0_0_1; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//(valueExpressions+=XExpression ("," valueExpressions+=XExpression)*)?
		public Group getGroup_3() { return cGroup_3; }

		//valueExpressions+=XExpression
		public Assignment getValueExpressionsAssignment_3_0() { return cValueExpressionsAssignment_3_0; }

		//XExpression
		public RuleCall getValueExpressionsXExpressionParserRuleCall_3_0_0() { return cValueExpressionsXExpressionParserRuleCall_3_0_0; }

		//("," valueExpressions+=XExpression)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//valueExpressions+=XExpression
		public Assignment getValueExpressionsAssignment_3_1_1() { return cValueExpressionsAssignment_3_1_1; }

		//XExpression
		public RuleCall getValueExpressionsXExpressionParserRuleCall_3_1_1_0() { return cValueExpressionsXExpressionParserRuleCall_3_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//("repeat" repeatExpression=XExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"repeat"
		public Keyword getRepeatKeyword_5_0() { return cRepeatKeyword_5_0; }

		//repeatExpression=XExpression
		public Assignment getRepeatExpressionAssignment_5_1() { return cRepeatExpressionAssignment_5_1; }

		//XExpression
		public RuleCall getRepeatExpressionXExpressionParserRuleCall_5_1_0() { return cRepeatExpressionXExpressionParserRuleCall_5_1_0; }

		//channels=ChannelSelector?
		public Assignment getChannelsAssignment_6() { return cChannelsAssignment_6; }

		//ChannelSelector
		public RuleCall getChannelsChannelSelectorParserRuleCall_6_0() { return cChannelsChannelSelectorParserRuleCall_6_0; }

		//("when" guardExpression=XExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"when"
		public Keyword getWhenKeyword_7_0() { return cWhenKeyword_7_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_7_1() { return cGuardExpressionAssignment_7_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_7_1_0() { return cGuardExpressionXExpressionParserRuleCall_7_1_0; }
	}

	public class ReActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFireActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEventActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ReAction:
		//	FireAction | EventAction;
		public ParserRule getRule() { return rule; }

		//FireAction | EventAction
		public Alternatives getAlternatives() { return cAlternatives; }

		//FireAction
		public RuleCall getFireActionParserRuleCall_0() { return cFireActionParserRuleCall_0; }

		//EventAction
		public RuleCall getEventActionParserRuleCall_1() { return cEventActionParserRuleCall_1; }
	}

	public class FireActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FireAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFireActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cActionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cInputPatternsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cInputPatternsInputPatternParserRuleCall_3_0_0 = (RuleCall)cInputPatternsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cInputPatternsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cInputPatternsInputPatternParserRuleCall_3_1_1_0 = (RuleCall)cInputPatternsAssignment_3_1_1.eContents().get(0);
		private final RuleCall cMAPS_TOParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cOutputPatternsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_5_0_0 = (RuleCall)cOutputPatternsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cOutputPatternsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_5_1_1_0 = (RuleCall)cOutputPatternsAssignment_5_1_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGuardKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_6_1_0 = (RuleCall)cGuardExpressionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDelayKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDelayExpressionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDelayExpressionXExpressionParserRuleCall_7_1_0 = (RuleCall)cDelayExpressionAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDoKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cBodyExpressionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cBodyExpressionXBodyExpressionParserRuleCall_8_1_0 = (RuleCall)cBodyExpressionAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cUpdateKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cUpdateExpressionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cUpdateExpressionXBodyExpressionParserRuleCall_9_1_0 = (RuleCall)cUpdateExpressionAssignment_9_1.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//FireAction:
		//	{FireAction} (name=QualifiedName ":")? "action" (inputPatterns+=InputPattern ("," inputPatterns+=InputPattern)*)?
		//	MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)?
		//	("delay" delayExpression=XExpression)? //	(attributes+=ActionVariable)*
		//	("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end";
		public ParserRule getRule() { return rule; }

		//{FireAction} (name=QualifiedName ":")? "action" (inputPatterns+=InputPattern ("," inputPatterns+=InputPattern)*)?
		//MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)?
		//("delay" delayExpression=XExpression)? //	(attributes+=ActionVariable)*
		//("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end"
		public Group getGroup() { return cGroup; }

		//{FireAction}
		public Action getFireActionAction_0() { return cFireActionAction_0; }

		//(name=QualifiedName ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=QualifiedName
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0_0() { return cNameQualifiedNameParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"action"
		public Keyword getActionKeyword_2() { return cActionKeyword_2; }

		//(inputPatterns+=InputPattern ("," inputPatterns+=InputPattern)*)?
		public Group getGroup_3() { return cGroup_3; }

		//inputPatterns+=InputPattern
		public Assignment getInputPatternsAssignment_3_0() { return cInputPatternsAssignment_3_0; }

		//InputPattern
		public RuleCall getInputPatternsInputPatternParserRuleCall_3_0_0() { return cInputPatternsInputPatternParserRuleCall_3_0_0; }

		//("," inputPatterns+=InputPattern)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//inputPatterns+=InputPattern
		public Assignment getInputPatternsAssignment_3_1_1() { return cInputPatternsAssignment_3_1_1; }

		//InputPattern
		public RuleCall getInputPatternsInputPatternParserRuleCall_3_1_1_0() { return cInputPatternsInputPatternParserRuleCall_3_1_1_0; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_4() { return cMAPS_TOParserRuleCall_4; }

		//(outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)?
		public Group getGroup_5() { return cGroup_5; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_5_0() { return cOutputPatternsAssignment_5_0; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_5_0_0() { return cOutputPatternsOutputPatternParserRuleCall_5_0_0; }

		//("," outputPatterns+=OutputPattern)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_5_1_1() { return cOutputPatternsAssignment_5_1_1; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_5_1_1_0() { return cOutputPatternsOutputPatternParserRuleCall_5_1_1_0; }

		//("guard" guardExpression=XExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//"guard"
		public Keyword getGuardKeyword_6_0() { return cGuardKeyword_6_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_6_1() { return cGuardExpressionAssignment_6_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_6_1_0() { return cGuardExpressionXExpressionParserRuleCall_6_1_0; }

		//("delay" delayExpression=XExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"delay"
		public Keyword getDelayKeyword_7_0() { return cDelayKeyword_7_0; }

		//delayExpression=XExpression
		public Assignment getDelayExpressionAssignment_7_1() { return cDelayExpressionAssignment_7_1; }

		//XExpression
		public RuleCall getDelayExpressionXExpressionParserRuleCall_7_1_0() { return cDelayExpressionXExpressionParserRuleCall_7_1_0; }

		//("do" bodyExpression=XBodyExpression)?
		public Group getGroup_8() { return cGroup_8; }

		//"do"
		public Keyword getDoKeyword_8_0() { return cDoKeyword_8_0; }

		//bodyExpression=XBodyExpression
		public Assignment getBodyExpressionAssignment_8_1() { return cBodyExpressionAssignment_8_1; }

		//XBodyExpression
		public RuleCall getBodyExpressionXBodyExpressionParserRuleCall_8_1_0() { return cBodyExpressionXBodyExpressionParserRuleCall_8_1_0; }

		//("update" updateExpression=XBodyExpression)?
		public Group getGroup_9() { return cGroup_9; }

		//"update"
		public Keyword getUpdateKeyword_9_0() { return cUpdateKeyword_9_0; }

		//updateExpression=XBodyExpression
		public Assignment getUpdateExpressionAssignment_9_1() { return cUpdateExpressionAssignment_9_1; }

		//XBodyExpression
		public RuleCall getUpdateExpressionXBodyExpressionParserRuleCall_9_1_0() { return cUpdateExpressionXBodyExpressionParserRuleCall_9_1_0; }

		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }
	}

	public class XBodyExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XBodyExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXBlockExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cExpressionsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cExpressionsXExpressionInsideBlockParserRuleCall_1_0_0 = (RuleCall)cExpressionsAssignment_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//XBodyExpression returns xbase::XExpression:
		//	{xbase::XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
		public ParserRule getRule() { return rule; }

		//{xbase::XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*
		public Group getGroup() { return cGroup; }

		//{xbase::XBlockExpression}
		public Action getXBlockExpressionAction_0() { return cXBlockExpressionAction_0; }

		//(expressions+=XExpressionInsideBlock ";"?)*
		public Group getGroup_1() { return cGroup_1; }

		//expressions+=XExpressionInsideBlock
		public Assignment getExpressionsAssignment_1_0() { return cExpressionsAssignment_1_0; }

		//XExpressionInsideBlock
		public RuleCall getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0() { return cExpressionsXExpressionInsideBlockParserRuleCall_1_0_0; }

		//";"?
		public Keyword getSemicolonKeyword_1_1() { return cSemicolonKeyword_1_1; }
	}

	public class InputPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InputPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInputPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cPortRefAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cPortRefPortCrossReference_1_0_0 = (CrossReference)cPortRefAssignment_1_0.eContents().get(0);
		private final RuleCall cPortRefPortValidIDParserRuleCall_1_0_0_1 = (RuleCall)cPortRefPortCrossReference_1_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cVariablesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cVariablesValidIDParserRuleCall_3_0_0 = (RuleCall)cVariablesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cVariablesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cVariablesValidIDParserRuleCall_3_1_1_0 = (RuleCall)cVariablesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRepeatKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRepeatExpressionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRepeatExpressionXExpressionParserRuleCall_5_1_0 = (RuleCall)cRepeatExpressionAssignment_5_1.eContents().get(0);
		private final Assignment cChannelsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cChannelsChannelSelectorParserRuleCall_6_0 = (RuleCall)cChannelsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWhenKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_7_1_0 = (RuleCall)cGuardExpressionAssignment_7_1.eContents().get(0);
		
		//InputPattern:
		//	{InputPattern} (portRef=[Port|ValidID] ":")? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("repeat"
		//	repeatExpression=XExpression)? channels=ChannelSelector? ("when" guardExpression=XExpression)?;
		public ParserRule getRule() { return rule; }

		//{InputPattern} (portRef=[Port|ValidID] ":")? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("repeat"
		//repeatExpression=XExpression)? channels=ChannelSelector? ("when" guardExpression=XExpression)?
		public Group getGroup() { return cGroup; }

		//{InputPattern}
		public Action getInputPatternAction_0() { return cInputPatternAction_0; }

		//(portRef=[Port|ValidID] ":")?
		public Group getGroup_1() { return cGroup_1; }

		//portRef=[Port|ValidID]
		public Assignment getPortRefAssignment_1_0() { return cPortRefAssignment_1_0; }

		//[Port|ValidID]
		public CrossReference getPortRefPortCrossReference_1_0_0() { return cPortRefPortCrossReference_1_0_0; }

		//ValidID
		public RuleCall getPortRefPortValidIDParserRuleCall_1_0_0_1() { return cPortRefPortValidIDParserRuleCall_1_0_0_1; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//(variables+=ValidID ("," variables+=ValidID)*)?
		public Group getGroup_3() { return cGroup_3; }

		//variables+=ValidID
		public Assignment getVariablesAssignment_3_0() { return cVariablesAssignment_3_0; }

		//ValidID
		public RuleCall getVariablesValidIDParserRuleCall_3_0_0() { return cVariablesValidIDParserRuleCall_3_0_0; }

		//("," variables+=ValidID)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//variables+=ValidID
		public Assignment getVariablesAssignment_3_1_1() { return cVariablesAssignment_3_1_1; }

		//ValidID
		public RuleCall getVariablesValidIDParserRuleCall_3_1_1_0() { return cVariablesValidIDParserRuleCall_3_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }

		//("repeat" repeatExpression=XExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"repeat"
		public Keyword getRepeatKeyword_5_0() { return cRepeatKeyword_5_0; }

		//repeatExpression=XExpression
		public Assignment getRepeatExpressionAssignment_5_1() { return cRepeatExpressionAssignment_5_1; }

		//XExpression
		public RuleCall getRepeatExpressionXExpressionParserRuleCall_5_1_0() { return cRepeatExpressionXExpressionParserRuleCall_5_1_0; }

		//channels=ChannelSelector?
		public Assignment getChannelsAssignment_6() { return cChannelsAssignment_6; }

		//ChannelSelector
		public RuleCall getChannelsChannelSelectorParserRuleCall_6_0() { return cChannelsChannelSelectorParserRuleCall_6_0; }

		//("when" guardExpression=XExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"when"
		public Keyword getWhenKeyword_7_0() { return cWhenKeyword_7_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_7_1() { return cGuardExpressionAssignment_7_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_7_1_0() { return cGuardExpressionXExpressionParserRuleCall_7_1_0; }
	}

	public class ChannelSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChannelSelector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExpressionChannelSelectorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKeywordChannelSelectorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ChannelSelector:
		//	ExpressionChannelSelector | KeywordChannelSelector;
		public ParserRule getRule() { return rule; }

		//ExpressionChannelSelector | KeywordChannelSelector
		public Alternatives getAlternatives() { return cAlternatives; }

		//ExpressionChannelSelector
		public RuleCall getExpressionChannelSelectorParserRuleCall_0() { return cExpressionChannelSelectorParserRuleCall_0; }

		//KeywordChannelSelector
		public RuleCall getKeywordChannelSelectorParserRuleCall_1() { return cKeywordChannelSelectorParserRuleCall_1; }
	}

	public class ExpressionChannelSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionChannelSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExpressionChannelSelectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAtKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Assignment cManyAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cManyAtKeyword_1_1_0 = (Keyword)cManyAssignment_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKeyExpressionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKeyExpressionsXExpressionParserRuleCall_3_0 = (RuleCall)cKeyExpressionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cKeyExpressionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cKeyExpressionsXExpressionParserRuleCall_4_1_0 = (RuleCall)cKeyExpressionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ExpressionChannelSelector:
		//	{ExpressionChannelSelector} ("at" | many?="at*") "{" keyExpressions+=XExpression ("," keyExpressions+=XExpression)*
		//	"}";
		public ParserRule getRule() { return rule; }

		//{ExpressionChannelSelector} ("at" | many?="at*") "{" keyExpressions+=XExpression ("," keyExpressions+=XExpression)* "}"
		public Group getGroup() { return cGroup; }

		//{ExpressionChannelSelector}
		public Action getExpressionChannelSelectorAction_0() { return cExpressionChannelSelectorAction_0; }

		//"at" | many?="at*"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"at"
		public Keyword getAtKeyword_1_0() { return cAtKeyword_1_0; }

		//many?="at*"
		public Assignment getManyAssignment_1_1() { return cManyAssignment_1_1; }

		//"at*"
		public Keyword getManyAtKeyword_1_1_0() { return cManyAtKeyword_1_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//keyExpressions+=XExpression
		public Assignment getKeyExpressionsAssignment_3() { return cKeyExpressionsAssignment_3; }

		//XExpression
		public RuleCall getKeyExpressionsXExpressionParserRuleCall_3_0() { return cKeyExpressionsXExpressionParserRuleCall_3_0; }

		//("," keyExpressions+=XExpression)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//keyExpressions+=XExpression
		public Assignment getKeyExpressionsAssignment_4_1() { return cKeyExpressionsAssignment_4_1; }

		//XExpression
		public RuleCall getKeyExpressionsXExpressionParserRuleCall_4_1_0() { return cKeyExpressionsXExpressionParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class KeywordChannelSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeywordChannelSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeywordAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeywordChannelSelectorKeywordEnumRuleCall_1_0 = (RuleCall)cKeywordAssignment_1.eContents().get(0);
		
		//KeywordChannelSelector:
		//	"at"? keyword=ChannelSelectorKeyword;
		public ParserRule getRule() { return rule; }

		//"at"? keyword=ChannelSelectorKeyword
		public Group getGroup() { return cGroup; }

		//"at"?
		public Keyword getAtKeyword_0() { return cAtKeyword_0; }

		//keyword=ChannelSelectorKeyword
		public Assignment getKeywordAssignment_1() { return cKeywordAssignment_1; }

		//ChannelSelectorKeyword
		public RuleCall getKeywordChannelSelectorKeywordEnumRuleCall_1_0() { return cKeywordChannelSelectorKeywordEnumRuleCall_1_0; }
	}

	public class ScheduleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Schedule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScheduleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFsmKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInitialAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInitialStateCrossReference_2_0 = (CrossReference)cInitialAssignment_2.eContents().get(0);
		private final RuleCall cInitialStateIDTerminalRuleCall_2_0_1 = (RuleCall)cInitialStateCrossReference_2_0.eContents().get(1);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStatesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStatesStateParserRuleCall_4_0 = (RuleCall)cStatesAssignment_4.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Schedule:
		//	"schedule" "fsm"? initial=[State] ":" states+=State+ "end";
		public ParserRule getRule() { return rule; }

		//"schedule" "fsm"? initial=[State] ":" states+=State+ "end"
		public Group getGroup() { return cGroup; }

		//"schedule"
		public Keyword getScheduleKeyword_0() { return cScheduleKeyword_0; }

		//"fsm"?
		public Keyword getFsmKeyword_1() { return cFsmKeyword_1; }

		//initial=[State]
		public Assignment getInitialAssignment_2() { return cInitialAssignment_2; }

		//[State]
		public CrossReference getInitialStateCrossReference_2_0() { return cInitialStateCrossReference_2_0; }

		//ID
		public RuleCall getInitialStateIDTerminalRuleCall_2_0_1() { return cInitialStateIDTerminalRuleCall_2_0_1; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//states+=State+
		public Assignment getStatesAssignment_4() { return cStatesAssignment_4; }

		//State
		public RuleCall getStatesStateParserRuleCall_4_0() { return cStatesStateParserRuleCall_4_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cTransitionsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cTransitionsTransitionParserRuleCall_1_0_0 = (RuleCall)cTransitionsAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cVerticalLineKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cTransitionsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cTransitionsTransitionParserRuleCall_1_1_1_0 = (RuleCall)cTransitionsAssignment_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//State:
		//	name=ValidID (transitions+=Transition ("|" transitions+=Transition)*)? ";";
		public ParserRule getRule() { return rule; }

		//name=ValidID (transitions+=Transition ("|" transitions+=Transition)*)? ";"
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//(transitions+=Transition ("|" transitions+=Transition)*)?
		public Group getGroup_1() { return cGroup_1; }

		//transitions+=Transition
		public Assignment getTransitionsAssignment_1_0() { return cTransitionsAssignment_1_0; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_1_0_0() { return cTransitionsTransitionParserRuleCall_1_0_0; }

		//("|" transitions+=Transition)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"|"
		public Keyword getVerticalLineKeyword_1_1_0() { return cVerticalLineKeyword_1_1_0; }

		//transitions+=Transition
		public Assignment getTransitionsAssignment_1_1_1() { return cTransitionsAssignment_1_1_1; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_1_1_1_0() { return cTransitionsTransitionParserRuleCall_1_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTagsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTagsQualifiedNameParserRuleCall_1_0 = (RuleCall)cTagsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTagsQualifiedNameParserRuleCall_2_1_0 = (RuleCall)cTagsAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetStateCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetStateValidIDParserRuleCall_5_0_1 = (RuleCall)cTargetStateCrossReference_5_0.eContents().get(1);
		
		//Transition:
		//	"(" tags+=QualifiedName ("," tags+=QualifiedName)* ")" "-->" target=[State|ValidID];
		public ParserRule getRule() { return rule; }

		//"(" tags+=QualifiedName ("," tags+=QualifiedName)* ")" "-->" target=[State|ValidID]
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//tags+=QualifiedName
		public Assignment getTagsAssignment_1() { return cTagsAssignment_1; }

		//QualifiedName
		public RuleCall getTagsQualifiedNameParserRuleCall_1_0() { return cTagsQualifiedNameParserRuleCall_1_0; }

		//("," tags+=QualifiedName)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//tags+=QualifiedName
		public Assignment getTagsAssignment_2_1() { return cTagsAssignment_2_1; }

		//QualifiedName
		public RuleCall getTagsQualifiedNameParserRuleCall_2_1_0() { return cTagsQualifiedNameParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//"-->"
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_4; }

		//target=[State|ValidID]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }

		//[State|ValidID]
		public CrossReference getTargetStateCrossReference_5_0() { return cTargetStateCrossReference_5_0; }

		//ValidID
		public RuleCall getTargetStateValidIDParserRuleCall_5_0_1() { return cTargetStateValidIDParserRuleCall_5_0_1; }
	}

	public class EventActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EventAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cEventKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cEventPatternsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cEventPatternsEventPatternParserRuleCall_3_0_0 = (RuleCall)cEventPatternsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEventPatternsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEventPatternsEventPatternParserRuleCall_3_1_1_0 = (RuleCall)cEventPatternsAssignment_3_1_1.eContents().get(0);
		private final RuleCall cMAPS_TOParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cOutputPatternsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_5_0_0 = (RuleCall)cOutputPatternsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cOutputPatternsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cOutputPatternsOutputPatternParserRuleCall_5_1_1_0 = (RuleCall)cOutputPatternsAssignment_5_1_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGuardKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_6_1_0 = (RuleCall)cGuardExpressionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDoKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cBodyExpressionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cBodyExpressionXBodyExpressionParserRuleCall_7_1_0 = (RuleCall)cBodyExpressionAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUpdateKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUpdateExpressionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUpdateExpressionXBodyExpressionParserRuleCall_8_1_0 = (RuleCall)cUpdateExpressionAssignment_8_1.eContents().get(0);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//EventAction:
		//	{EventAction} (name=QualifiedName ":")? "event" (eventPatterns+=EventPattern ("," eventPatterns+=EventPattern)*)?
		//	MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
		//	("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end";
		public ParserRule getRule() { return rule; }

		//{EventAction} (name=QualifiedName ":")? "event" (eventPatterns+=EventPattern ("," eventPatterns+=EventPattern)*)?
		//MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
		//("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end"
		public Group getGroup() { return cGroup; }

		//{EventAction}
		public Action getEventActionAction_0() { return cEventActionAction_0; }

		//(name=QualifiedName ":")?
		public Group getGroup_1() { return cGroup_1; }

		//name=QualifiedName
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0_0() { return cNameQualifiedNameParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"event"
		public Keyword getEventKeyword_2() { return cEventKeyword_2; }

		//(eventPatterns+=EventPattern ("," eventPatterns+=EventPattern)*)?
		public Group getGroup_3() { return cGroup_3; }

		//eventPatterns+=EventPattern
		public Assignment getEventPatternsAssignment_3_0() { return cEventPatternsAssignment_3_0; }

		//EventPattern
		public RuleCall getEventPatternsEventPatternParserRuleCall_3_0_0() { return cEventPatternsEventPatternParserRuleCall_3_0_0; }

		//("," eventPatterns+=EventPattern)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//eventPatterns+=EventPattern
		public Assignment getEventPatternsAssignment_3_1_1() { return cEventPatternsAssignment_3_1_1; }

		//EventPattern
		public RuleCall getEventPatternsEventPatternParserRuleCall_3_1_1_0() { return cEventPatternsEventPatternParserRuleCall_3_1_1_0; }

		//MAPS_TO
		public RuleCall getMAPS_TOParserRuleCall_4() { return cMAPS_TOParserRuleCall_4; }

		//(outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)?
		public Group getGroup_5() { return cGroup_5; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_5_0() { return cOutputPatternsAssignment_5_0; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_5_0_0() { return cOutputPatternsOutputPatternParserRuleCall_5_0_0; }

		//("," outputPatterns+=OutputPattern)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//outputPatterns+=OutputPattern
		public Assignment getOutputPatternsAssignment_5_1_1() { return cOutputPatternsAssignment_5_1_1; }

		//OutputPattern
		public RuleCall getOutputPatternsOutputPatternParserRuleCall_5_1_1_0() { return cOutputPatternsOutputPatternParserRuleCall_5_1_1_0; }

		//("guard" guardExpression=XExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//"guard"
		public Keyword getGuardKeyword_6_0() { return cGuardKeyword_6_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_6_1() { return cGuardExpressionAssignment_6_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_6_1_0() { return cGuardExpressionXExpressionParserRuleCall_6_1_0; }

		//("do" bodyExpression=XBodyExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"do"
		public Keyword getDoKeyword_7_0() { return cDoKeyword_7_0; }

		//bodyExpression=XBodyExpression
		public Assignment getBodyExpressionAssignment_7_1() { return cBodyExpressionAssignment_7_1; }

		//XBodyExpression
		public RuleCall getBodyExpressionXBodyExpressionParserRuleCall_7_1_0() { return cBodyExpressionXBodyExpressionParserRuleCall_7_1_0; }

		//("update" updateExpression=XBodyExpression)?
		public Group getGroup_8() { return cGroup_8; }

		//"update"
		public Keyword getUpdateKeyword_8_0() { return cUpdateKeyword_8_0; }

		//updateExpression=XBodyExpression
		public Assignment getUpdateExpressionAssignment_8_1() { return cUpdateExpressionAssignment_8_1; }

		//XBodyExpression
		public RuleCall getUpdateExpressionXBodyExpressionParserRuleCall_8_1_0() { return cUpdateExpressionXBodyExpressionParserRuleCall_8_1_0; }

		//"end"
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }
	}

	public class EventPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EventPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVarRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cVarRefStateVariableCrossReference_1_0 = (CrossReference)cVarRefAssignment_1.eContents().get(0);
		private final RuleCall cVarRefStateVariableValidIDParserRuleCall_1_0_1 = (RuleCall)cVarRefStateVariableCrossReference_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cPropertyAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cPropertyFullStopKeyword_2_0_0 = (Keyword)cPropertyAssignment_2_0.eContents().get(0);
		private final Keyword cExclamationMarkKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cNameAlternatives_3_0 = (Alternatives)cNameAssignment_3.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_3_0_0 = (RuleCall)cNameAlternatives_3_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cNameAlternatives_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNumberSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cQualifierAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cQualifierAlternatives_4_1_0 = (Alternatives)cQualifierAssignment_4_1.eContents().get(0);
		private final RuleCall cQualifierValidIDParserRuleCall_4_1_0_0 = (RuleCall)cQualifierAlternatives_4_1_0.eContents().get(0);
		private final RuleCall cQualifierSTRINGTerminalRuleCall_4_1_0_1 = (RuleCall)cQualifierAlternatives_4_1_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cVariablesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cVariablesValidIDParserRuleCall_6_0_0 = (RuleCall)cVariablesAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cVariablesAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cVariablesValidIDParserRuleCall_6_1_1_0 = (RuleCall)cVariablesAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommercialAtKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTimeExpressionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTimeExpressionXExpressionParserRuleCall_8_1_0 = (RuleCall)cTimeExpressionAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWhenKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cGuardExpressionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cGuardExpressionXExpressionParserRuleCall_9_1_0 = (RuleCall)cGuardExpressionAssignment_9_1.eContents().get(0);
		
		//EventPattern:
		//	{EventPattern} varRef=[StateVariable|ValidID] (property?="." | "!") name=(ValidID | STRING) ("#" qualifier=(ValidID |
		//	STRING))? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("@" timeExpression=XExpression)? ("when"
		//	guardExpression=XExpression)?;
		public ParserRule getRule() { return rule; }

		//{EventPattern} varRef=[StateVariable|ValidID] (property?="." | "!") name=(ValidID | STRING) ("#" qualifier=(ValidID |
		//STRING))? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("@" timeExpression=XExpression)? ("when"
		//guardExpression=XExpression)?
		public Group getGroup() { return cGroup; }

		//{EventPattern}
		public Action getEventPatternAction_0() { return cEventPatternAction_0; }

		//varRef=[StateVariable|ValidID]
		public Assignment getVarRefAssignment_1() { return cVarRefAssignment_1; }

		//[StateVariable|ValidID]
		public CrossReference getVarRefStateVariableCrossReference_1_0() { return cVarRefStateVariableCrossReference_1_0; }

		//ValidID
		public RuleCall getVarRefStateVariableValidIDParserRuleCall_1_0_1() { return cVarRefStateVariableValidIDParserRuleCall_1_0_1; }

		//property?="." | "!"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//property?="."
		public Assignment getPropertyAssignment_2_0() { return cPropertyAssignment_2_0; }

		//"."
		public Keyword getPropertyFullStopKeyword_2_0_0() { return cPropertyFullStopKeyword_2_0_0; }

		//"!"
		public Keyword getExclamationMarkKeyword_2_1() { return cExclamationMarkKeyword_2_1; }

		//name=(ValidID | STRING)
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID | STRING
		public Alternatives getNameAlternatives_3_0() { return cNameAlternatives_3_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0_0() { return cNameValidIDParserRuleCall_3_0_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0_1() { return cNameSTRINGTerminalRuleCall_3_0_1; }

		//("#" qualifier=(ValidID | STRING))?
		public Group getGroup_4() { return cGroup_4; }

		//"#"
		public Keyword getNumberSignKeyword_4_0() { return cNumberSignKeyword_4_0; }

		//qualifier=(ValidID | STRING)
		public Assignment getQualifierAssignment_4_1() { return cQualifierAssignment_4_1; }

		//ValidID | STRING
		public Alternatives getQualifierAlternatives_4_1_0() { return cQualifierAlternatives_4_1_0; }

		//ValidID
		public RuleCall getQualifierValidIDParserRuleCall_4_1_0_0() { return cQualifierValidIDParserRuleCall_4_1_0_0; }

		//STRING
		public RuleCall getQualifierSTRINGTerminalRuleCall_4_1_0_1() { return cQualifierSTRINGTerminalRuleCall_4_1_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//(variables+=ValidID ("," variables+=ValidID)*)?
		public Group getGroup_6() { return cGroup_6; }

		//variables+=ValidID
		public Assignment getVariablesAssignment_6_0() { return cVariablesAssignment_6_0; }

		//ValidID
		public RuleCall getVariablesValidIDParserRuleCall_6_0_0() { return cVariablesValidIDParserRuleCall_6_0_0; }

		//("," variables+=ValidID)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//variables+=ValidID
		public Assignment getVariablesAssignment_6_1_1() { return cVariablesAssignment_6_1_1; }

		//ValidID
		public RuleCall getVariablesValidIDParserRuleCall_6_1_1_0() { return cVariablesValidIDParserRuleCall_6_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }

		//("@" timeExpression=XExpression)?
		public Group getGroup_8() { return cGroup_8; }

		//"@"
		public Keyword getCommercialAtKeyword_8_0() { return cCommercialAtKeyword_8_0; }

		//timeExpression=XExpression
		public Assignment getTimeExpressionAssignment_8_1() { return cTimeExpressionAssignment_8_1; }

		//XExpression
		public RuleCall getTimeExpressionXExpressionParserRuleCall_8_1_0() { return cTimeExpressionXExpressionParserRuleCall_8_1_0; }

		//("when" guardExpression=XExpression)?
		public Group getGroup_9() { return cGroup_9; }

		//"when"
		public Keyword getWhenKeyword_9_0() { return cWhenKeyword_9_0; }

		//guardExpression=XExpression
		public Assignment getGuardExpressionAssignment_9_1() { return cGuardExpressionAssignment_9_1; }

		//XExpression
		public RuleCall getGuardExpressionXExpressionParserRuleCall_9_1_0() { return cGuardExpressionXExpressionParserRuleCall_9_1_0; }
	}

	public class XUnaryOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XUnaryOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cXUnaryOperationAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cFeatureAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_0_1_0 = (CrossReference)cFeatureAssignment_0_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_0_1_0.eContents().get(1);
		private final Assignment cOperandAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOperandXOther2OperatorExpressionParserRuleCall_0_2_0 = (RuleCall)cOperandAssignment_0_2.eContents().get(0);
		private final RuleCall cXOther2OperatorExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// XBase overrides
		//// support # index operator, with highest priority
		//XUnaryOperation returns xbase::XExpression:
		//	{xbase::XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XOther2OperatorExpression |
		//	XOther2OperatorExpression;
		public ParserRule getRule() { return rule; }

		//{xbase::XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XOther2OperatorExpression |
		//XOther2OperatorExpression
		public Alternatives getAlternatives() { return cAlternatives; }

		//{xbase::XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XOther2OperatorExpression
		public Group getGroup_0() { return cGroup_0; }

		//{xbase::XUnaryOperation}
		public Action getXUnaryOperationAction_0_0() { return cXUnaryOperationAction_0_0; }

		//feature=[types::JvmIdentifiableElement|OpUnary]
		public Assignment getFeatureAssignment_0_1() { return cFeatureAssignment_0_1; }

		//[types::JvmIdentifiableElement|OpUnary]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_0_1_0() { return cFeatureJvmIdentifiableElementCrossReference_0_1_0; }

		//OpUnary
		public RuleCall getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1() { return cFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1; }

		//operand=XOther2OperatorExpression
		public Assignment getOperandAssignment_0_2() { return cOperandAssignment_0_2; }

		//XOther2OperatorExpression
		public RuleCall getOperandXOther2OperatorExpressionParserRuleCall_0_2_0() { return cOperandXOther2OperatorExpressionParserRuleCall_0_2_0; }

		//XOther2OperatorExpression
		public RuleCall getXOther2OperatorExpressionParserRuleCall_1() { return cXOther2OperatorExpressionParserRuleCall_1; }
	}

	public class XOther2OperatorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOther2OperatorExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXCastedExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cXBinaryOperationLeftOperandAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cFeatureAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0 = (CrossReference)cFeatureAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementOpOther2ParserRuleCall_1_0_0_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0.eContents().get(1);
		private final Assignment cRightOperandAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightOperandXCastedExpressionParserRuleCall_1_1_0 = (RuleCall)cRightOperandAssignment_1_1.eContents().get(0);
		
		//XOther2OperatorExpression returns xbase::XExpression:
		//	XCastedExpression (=> ({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2])
		//	rightOperand=XCastedExpression)*;
		public ParserRule getRule() { return rule; }

		//XCastedExpression (=> ({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2])
		//rightOperand=XCastedExpression)*
		public Group getGroup() { return cGroup; }

		//XCastedExpression
		public RuleCall getXCastedExpressionParserRuleCall_0() { return cXCastedExpressionParserRuleCall_0; }

		//(=> ({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2])
		//rightOperand=XCastedExpression)*
		public Group getGroup_1() { return cGroup_1; }

		//=> ({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2])
		public Group getGroup_1_0() { return cGroup_1_0; }

		//{xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//{xbase::XBinaryOperation.leftOperand=current}
		public Action getXBinaryOperationLeftOperandAction_1_0_0_0() { return cXBinaryOperationLeftOperandAction_1_0_0_0; }

		//feature=[types::JvmIdentifiableElement|OpOther2]
		public Assignment getFeatureAssignment_1_0_0_1() { return cFeatureAssignment_1_0_0_1; }

		//[types::JvmIdentifiableElement|OpOther2]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0() { return cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0; }

		//OpOther2
		public RuleCall getFeatureJvmIdentifiableElementOpOther2ParserRuleCall_1_0_0_1_0_1() { return cFeatureJvmIdentifiableElementOpOther2ParserRuleCall_1_0_0_1_0_1; }

		//rightOperand=XCastedExpression
		public Assignment getRightOperandAssignment_1_1() { return cRightOperandAssignment_1_1; }

		//XCastedExpression
		public RuleCall getRightOperandXCastedExpressionParserRuleCall_1_1_0() { return cRightOperandXCastedExpressionParserRuleCall_1_1_0; }
	}

	public class OpOther2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OpOther2");
		private final Keyword cNumberSignKeyword = (Keyword)rule.eContents().get(1);
		
		//OpOther2:
		//	"#";
		public ParserRule getRule() { return rule; }

		//"#"
		public Keyword getNumberSignKeyword() { return cNumberSignKeyword; }
	}

	public class XClosureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XClosure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Action cXClosureAction_0_0_0 = (Action)cGroup_0_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Assignment cDeclaredFormalParametersAssignment_1_0_0_0 = (Assignment)cGroup_1_0_0.eContents().get(0);
		private final RuleCall cDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0 = (RuleCall)cDeclaredFormalParametersAssignment_1_0_0_0.eContents().get(0);
		private final Group cGroup_1_0_0_1 = (Group)cGroup_1_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_1_0_0_1_0 = (Keyword)cGroup_1_0_0_1.eContents().get(0);
		private final Assignment cDeclaredFormalParametersAssignment_1_0_0_1_1 = (Assignment)cGroup_1_0_0_1.eContents().get(1);
		private final RuleCall cDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0 = (RuleCall)cDeclaredFormalParametersAssignment_1_0_0_1_1.eContents().get(0);
		private final Assignment cExplicitSyntaxAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cExplicitSyntaxVerticalLineKeyword_1_0_1_0 = (Keyword)cExplicitSyntaxAssignment_1_0_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionXExpressionInClosureParserRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////	|
		////	(=>({xbase::XClosure} 'lambda') '('=>((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?=')')
		////		':'
		////		expression=XBodyExpression
		////		'end'
		////	)
		//XClosure returns xbase::XExpression:
		//	=> ({xbase::XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
		//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
		public ParserRule getRule() { return rule; }

		//=> ({xbase::XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
		//declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]"
		public Group getGroup() { return cGroup; }

		//=> ({xbase::XClosure} "[")
		public Group getGroup_0() { return cGroup_0; }

		//{xbase::XClosure} "["
		public Group getGroup_0_0() { return cGroup_0_0; }

		//{xbase::XClosure}
		public Action getXClosureAction_0_0_0() { return cXClosureAction_0_0_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0_1() { return cLeftSquareBracketKeyword_0_0_1; }

		//=> ((declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
		//explicitSyntax?="|")?
		public Group getGroup_1() { return cGroup_1; }

		//(declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//(declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//declaredFormalParameters+=JvmFormalParameter
		public Assignment getDeclaredFormalParametersAssignment_1_0_0_0() { return cDeclaredFormalParametersAssignment_1_0_0_0; }

		//JvmFormalParameter
		public RuleCall getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0() { return cDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0; }

		//("," declaredFormalParameters+=JvmFormalParameter)*
		public Group getGroup_1_0_0_1() { return cGroup_1_0_0_1; }

		//","
		public Keyword getCommaKeyword_1_0_0_1_0() { return cCommaKeyword_1_0_0_1_0; }

		//declaredFormalParameters+=JvmFormalParameter
		public Assignment getDeclaredFormalParametersAssignment_1_0_0_1_1() { return cDeclaredFormalParametersAssignment_1_0_0_1_1; }

		//JvmFormalParameter
		public RuleCall getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0() { return cDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0; }

		//explicitSyntax?="|"
		public Assignment getExplicitSyntaxAssignment_1_0_1() { return cExplicitSyntaxAssignment_1_0_1; }

		//"|"
		public Keyword getExplicitSyntaxVerticalLineKeyword_1_0_1_0() { return cExplicitSyntaxVerticalLineKeyword_1_0_1_0; }

		//expression=XExpressionInClosure
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }

		//XExpressionInClosure
		public RuleCall getExpressionXExpressionInClosureParserRuleCall_2_0() { return cExpressionXExpressionInClosureParserRuleCall_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	
	
	public class ChannelSelectorKeywordElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ChannelSelectorKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cALLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cALLAllKeyword_0_0 = (Keyword)cALLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANYAnyKeyword_1_0 = (Keyword)cANYEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ChannelSelectorKeyword:
		//	ALL="all" | ANY="any";
		public EnumRule getRule() { return rule; }

		//ALL="all" | ANY="any"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ALL="all"
		public EnumLiteralDeclaration getALLEnumLiteralDeclaration_0() { return cALLEnumLiteralDeclaration_0; }

		//"all"
		public Keyword getALLAllKeyword_0_0() { return cALLAllKeyword_0_0; }

		//ANY="any"
		public EnumLiteralDeclaration getANYEnumLiteralDeclaration_1() { return cANYEnumLiteralDeclaration_1; }

		//"any"
		public Keyword getANYAnyKeyword_1_0() { return cANYAnyKeyword_1_0; }
	}
	
	private ActorModelElements pActorModel;
	private EntityFolderElements pEntityFolder;
	private QualifiedNameWithOptionalWildcardElements pQualifiedNameWithOptionalWildcard;
	private EntityElements pEntity;
	private ActorRefElements pActorRef;
	private ParameterBindingElements pParameterBinding;
	private MAPS_TOElements pMAPS_TO;
	private TypedAtomicActorElements pTypedAtomicActor;
	private TypeParameterElements pTypeParameter;
	private TypedAtomicActorInstanceElements pTypedAtomicActorInstance;
	private CompositeEntityElements pCompositeEntity;
	private InjectableAttributeElements pInjectableAttribute;
	private VariableElements pVariable;
	private XInitExpressionElements pXInitExpression;
	private ParameterElements pParameter;
	private AnnotationAttributeElements pAnnotationAttribute;
	private TypedInputPortElements pTypedInputPort;
	private TypedOutputPortElements pTypedOutputPort;
	private RPIDElements pRPID;
	private ConversionRelationElements pConversionRelation;
	private AtomicActorImplElements pAtomicActorImpl;
	private JavaActorImplElements pJavaActorImpl;
	private CaltropActorImplElements pCaltropActorImpl;
	private FunctionDeclarationElements pFunctionDeclaration;
	private ProcedureDeclarationElements pProcedureDeclaration;
	private FunctionParameterElements pFunctionParameter;
	private StateVariableElements pStateVariable;
	private RealmElements pRealm;
	private InitActionElements pInitAction;
	private OutputPatternElements pOutputPattern;
	private ReActionElements pReAction;
	private FireActionElements pFireAction;
	private XBodyExpressionElements pXBodyExpression;
	private InputPatternElements pInputPattern;
	private ChannelSelectorElements pChannelSelector;
	private ExpressionChannelSelectorElements pExpressionChannelSelector;
	private KeywordChannelSelectorElements pKeywordChannelSelector;
	private ChannelSelectorKeywordElements unknownRuleChannelSelectorKeyword;
	private ScheduleElements pSchedule;
	private StateElements pState;
	private TransitionElements pTransition;
	private EventActionElements pEventAction;
	private EventPatternElements pEventPattern;
	private XUnaryOperationElements pXUnaryOperation;
	private XOther2OperatorExpressionElements pXOther2OperatorExpression;
	private OpOther2Elements pOpOther2;
	private XClosureElements pXClosure;
	
	private final Grammar grammar;

	private XbaseGrammarAccess gaXbase;

	@Inject
	public XActorGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.ptolemy.xtext.XActor".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	
	//ActorModel returns EntityFolder:
	//	{EntityFolder} "namespace" name=QualifiedName displayName=STRING? ":" imports=XImportSection?
	//	attributes+=InjectableAttribute* (entityContainers+=EntityFolder | entities+=Entity)* "end";
	public ActorModelElements getActorModelAccess() {
		return (pActorModel != null) ? pActorModel : (pActorModel = new ActorModelElements());
	}
	
	public ParserRule getActorModelRule() {
		return getActorModelAccess().getRule();
	}

	//EntityFolder:
	//	"namespace" name=QualifiedName displayName=STRING? ":" attributes+=InjectableAttribute*
	//	(entityContainers+=EntityFolder | entities+=Entity)* "end";
	public EntityFolderElements getEntityFolderAccess() {
		return (pEntityFolder != null) ? pEntityFolder : (pEntityFolder = new EntityFolderElements());
	}
	
	public ParserRule getEntityFolderRule() {
		return getEntityFolderAccess().getRule();
	}

	//QualifiedNameWithOptionalWildcard:
	//	ID ("." ID)* ".*"?;
	public QualifiedNameWithOptionalWildcardElements getQualifiedNameWithOptionalWildcardAccess() {
		return (pQualifiedNameWithOptionalWildcard != null) ? pQualifiedNameWithOptionalWildcard : (pQualifiedNameWithOptionalWildcard = new QualifiedNameWithOptionalWildcardElements());
	}
	
	public ParserRule getQualifiedNameWithOptionalWildcardRule() {
		return getQualifiedNameWithOptionalWildcardAccess().getRule();
	}

	//Entity:
	//	TypedAtomicActor | CompositeEntity;
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//ActorRef:
	//	ref=[Entity|QualifiedName] ("<" typeArguments+=JvmTypeReference ("," typeArguments+=JvmTypeReference)* ">")? ("("
	//	parameterBindings+=ParameterBinding ("," parameterBindings+=ParameterBinding)* ")")?;
	public ActorRefElements getActorRefAccess() {
		return (pActorRef != null) ? pActorRef : (pActorRef = new ActorRefElements());
	}
	
	public ParserRule getActorRefRule() {
		return getActorRefAccess().getRule();
	}

	//ParameterBinding:
	//	(parameterRef=[Parameter|ValidID] "=")? valueExpression=XInitExpression;
	public ParameterBindingElements getParameterBindingAccess() {
		return (pParameterBinding != null) ? pParameterBinding : (pParameterBinding = new ParameterBindingElements());
	}
	
	public ParserRule getParameterBindingRule() {
		return getParameterBindingAccess().getRule();
	}

	//MAPS_TO:
	//	"==>";
	public MAPS_TOElements getMAPS_TOAccess() {
		return (pMAPS_TO != null) ? pMAPS_TO : (pMAPS_TO = new MAPS_TOElements());
	}
	
	public ParserRule getMAPS_TORule() {
		return getMAPS_TOAccess().getRule();
	}

	//TypedAtomicActor:
	//	{TypedAtomicActor} "actor" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
	//	typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
	//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
	//	ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* impl=AtomicActorImpl?
	//	"end";
	public TypedAtomicActorElements getTypedAtomicActorAccess() {
		return (pTypedAtomicActor != null) ? pTypedAtomicActor : (pTypedAtomicActor = new TypedAtomicActorElements());
	}
	
	public ParserRule getTypedAtomicActorRule() {
		return getTypedAtomicActorAccess().getRule();
	}

	//TypeParameter:
	//	name=ValidID ("extends" type=JvmTypeReference)?;
	public TypeParameterElements getTypeParameterAccess() {
		return (pTypeParameter != null) ? pTypeParameter : (pTypeParameter = new TypeParameterElements());
	}
	
	public ParserRule getTypeParameterRule() {
		return getTypeParameterAccess().getRule();
	}

	//TypedAtomicActorInstance returns TypedAtomicActor:
	//	{TypedAtomicActor} name=ValidID displayName=STRING? ("=" superEntity=ActorRef ";"? | ("=" "actor")?
	//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
	//	ports+=TypedOutputPort)*)?)? ("is" superEntity=ActorRef)? attributes+=InjectableAttribute* (impl=AtomicActorImpl
	//	"end"));
	public TypedAtomicActorInstanceElements getTypedAtomicActorInstanceAccess() {
		return (pTypedAtomicActorInstance != null) ? pTypedAtomicActorInstance : (pTypedAtomicActorInstance = new TypedAtomicActorInstanceElements());
	}
	
	public ParserRule getTypedAtomicActorInstanceRule() {
		return getTypedAtomicActorInstanceAccess().getRule();
	}

	//CompositeEntity:
	//	{TypedCompositeActor} "network" name=ValidID displayName=STRING? ("<" typeParameters+=TypeParameter (","
	//	typeParameters+=TypeParameter)* ">")? ("(" attributes+=Parameter ("," attributes+=Parameter)* ")")?
	//	((ports+=TypedInputPort ("," ports+=TypedInputPort)*)? MAPS_TO (ports+=TypedOutputPort (","
	//	ports+=TypedOutputPort)*)?)? ":" attributes+=InjectableAttribute* ("var" (attributes+=Variable ";")*)? ("entities"
	//	entities+=TypedAtomicActorInstance*) ("structure" relations+=ConversionRelation*)? "end";
	public CompositeEntityElements getCompositeEntityAccess() {
		return (pCompositeEntity != null) ? pCompositeEntity : (pCompositeEntity = new CompositeEntityElements());
	}
	
	public ParserRule getCompositeEntityRule() {
		return getCompositeEntityAccess().getRule();
	}

	//InjectableAttribute:
	//	"-" type=JvmTypeReference name=ValidID displayName=STRING? ("@" attributes+=AnnotationAttribute)*;
	public InjectableAttributeElements getInjectableAttributeAccess() {
		return (pInjectableAttribute != null) ? pInjectableAttribute : (pInjectableAttribute = new InjectableAttributeElements());
	}
	
	public ParserRule getInjectableAttributeRule() {
		return getInjectableAttributeAccess().getRule();
	}

	//Variable:
	//	type=JvmTypeReference name=ValidID displayName=STRING? (OpSingleAssign valueExpression=XInitExpression)?;
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//XInitExpression returns xbase::XExpression:
	//	XOrExpression;
	public XInitExpressionElements getXInitExpressionAccess() {
		return (pXInitExpression != null) ? pXInitExpression : (pXInitExpression = new XInitExpressionElements());
	}
	
	public ParserRule getXInitExpressionRule() {
		return getXInitExpressionAccess().getRule();
	}

	//Parameter returns ActorParameter:
	//	type=JvmTypeReference name=ValidID displayName=STRING? ("=" valueExpression=XInitExpression)?;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//AnnotationAttribute returns Variable:
	//	type=JvmParameterizedTypeReference? name=ValidID "=" valueExpression=XInitExpression ";";
	public AnnotationAttributeElements getAnnotationAttributeAccess() {
		return (pAnnotationAttribute != null) ? pAnnotationAttribute : (pAnnotationAttribute = new AnnotationAttributeElements());
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//TypedInputPort:
	//	type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
	//	attributes+=AnnotationAttribute)*;
	public TypedInputPortElements getTypedInputPortAccess() {
		return (pTypedInputPort != null) ? pTypedInputPort : (pTypedInputPort = new TypedInputPortElements());
	}
	
	public ParserRule getTypedInputPortRule() {
		return getTypedInputPortAccess().getRule();
	}

	//TypedOutputPort:
	//	type=JvmParameterizedTypeReference ("[" rate=INT "]")? multiport?="*"? name=ValidID displayName=STRING? ("@"
	//	attributes+=AnnotationAttribute)*;
	public TypedOutputPortElements getTypedOutputPortAccess() {
		return (pTypedOutputPort != null) ? pTypedOutputPort : (pTypedOutputPort = new TypedOutputPortElements());
	}
	
	public ParserRule getTypedOutputPortRule() {
		return getTypedOutputPortAccess().getRule();
	}

	//RPID:
	//	ID ("." ID)?;
	public RPIDElements getRPIDAccess() {
		return (pRPID != null) ? pRPID : (pRPID = new RPIDElements());
	}
	
	public ParserRule getRPIDRule() {
		return getRPIDAccess().getRule();
	}

	//ConversionRelation:
	//	sourcePort=[Port|RPID] ("-->" targetPorts+=[Port|RPID] ("," targetPorts+=[Port|RPID])* | "--" (valueVar=ValidID "|")?
	//	conversionExpression=XExpression? ("when" guardExpression=XExpression)? "-->" targetPorts+=[Port|RPID]) ("as"
	//	name=ValidID displayName=STRING?)? ";"?;
	public ConversionRelationElements getConversionRelationAccess() {
		return (pConversionRelation != null) ? pConversionRelation : (pConversionRelation = new ConversionRelationElements());
	}
	
	public ParserRule getConversionRelationRule() {
		return getConversionRelationAccess().getRule();
	}

	//AtomicActorImpl:
	//	JavaActorImpl | CaltropActorImpl;
	public AtomicActorImplElements getAtomicActorImplAccess() {
		return (pAtomicActorImpl != null) ? pAtomicActorImpl : (pAtomicActorImpl = new AtomicActorImplElements());
	}
	
	public ParserRule getAtomicActorImplRule() {
		return getAtomicActorImplAccess().getRule();
	}

	//JavaActorImpl:
	//	"implementation" type=JvmParameterizedTypeReference;
	public JavaActorImplElements getJavaActorImplAccess() {
		return (pJavaActorImpl != null) ? pJavaActorImpl : (pJavaActorImpl = new JavaActorImplElements());
	}
	
	public ParserRule getJavaActorImplRule() {
		return getJavaActorImplAccess().getRule();
	}

	//// Caltrop stuff
	//CaltropActorImpl:
	//	{CaltropActorImpl} ":" (declarations+=StateVariable | initActions+=InitAction | actions+=ReAction |
	//	functions+=(FunctionDeclaration | ProcedureDeclaration))* schedule=Schedule?;
	public CaltropActorImplElements getCaltropActorImplAccess() {
		return (pCaltropActorImpl != null) ? pCaltropActorImpl : (pCaltropActorImpl = new CaltropActorImplElements());
	}
	
	public ParserRule getCaltropActorImplRule() {
		return getCaltropActorImplAccess().getRule();
	}

	//FunctionDeclaration:
	//	"function" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" "-->"
	//	type=JvmTypeReference ":" bodyExpression=XBodyExpression "end";
	public FunctionDeclarationElements getFunctionDeclarationAccess() {
		return (pFunctionDeclaration != null) ? pFunctionDeclaration : (pFunctionDeclaration = new FunctionDeclarationElements());
	}
	
	public ParserRule getFunctionDeclarationRule() {
		return getFunctionDeclarationAccess().getRule();
	}

	//ProcedureDeclaration returns FunctionDeclaration:
	//	"procedure" name=ValidID "(" (parameters+=FunctionParameter ("," parameters+=FunctionParameter)*)? ")" ":"
	//	bodyExpression=XBodyExpression "end";
	public ProcedureDeclarationElements getProcedureDeclarationAccess() {
		return (pProcedureDeclaration != null) ? pProcedureDeclaration : (pProcedureDeclaration = new ProcedureDeclarationElements());
	}
	
	public ParserRule getProcedureDeclarationRule() {
		return getProcedureDeclarationAccess().getRule();
	}

	//FunctionParameter returns JvmTypedObj:
	//	type=JvmTypeReference name=ValidID;
	public FunctionParameterElements getFunctionParameterAccess() {
		return (pFunctionParameter != null) ? pFunctionParameter : (pFunctionParameter = new FunctionParameterElements());
	}
	
	public ParserRule getFunctionParameterRule() {
		return getFunctionParameterAccess().getRule();
	}

	//StateVariable:
	//	("@" attributes+=AnnotationAttribute)* (constant?="val" | "var") realm=Realm? type=JvmTypeReference name=ValidID
	//	(((binding?=":=" | "=") valueExpression=XInitExpression)? ("update" updateExpression=XExpression)? ";")?;
	public StateVariableElements getStateVariableAccess() {
		return (pStateVariable != null) ? pStateVariable : (pStateVariable = new StateVariableElements());
	}
	
	public ParserRule getStateVariableRule() {
		return getStateVariableAccess().getRule();
	}

	//Realm:
	//	"@" key=(ID | STRING);
	public RealmElements getRealmAccess() {
		return (pRealm != null) ? pRealm : (pRealm = new RealmElements());
	}
	
	public ParserRule getRealmRule() {
		return getRealmAccess().getRule();
	}

	//InitAction returns OutputAction:
	//	{OutputAction} (name=ValidID ":")? "initialize" MAPS_TO (outputPatterns+=OutputPattern (","
	//	outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
	//	("do" bodyExpression=XBodyExpression)? "end";
	public InitActionElements getInitActionAccess() {
		return (pInitAction != null) ? pInitAction : (pInitAction = new InitActionElements());
	}
	
	public ParserRule getInitActionRule() {
		return getInitActionAccess().getRule();
	}

	//OutputPattern:
	//	{OutputPattern} (portRef=[Port|ValidID] ":")? "[" (valueExpressions+=XExpression (","
	//	valueExpressions+=XExpression)*)? "]" ("repeat" repeatExpression=XExpression)? channels=ChannelSelector? ("when"
	//	guardExpression=XExpression)?;
	public OutputPatternElements getOutputPatternAccess() {
		return (pOutputPattern != null) ? pOutputPattern : (pOutputPattern = new OutputPatternElements());
	}
	
	public ParserRule getOutputPatternRule() {
		return getOutputPatternAccess().getRule();
	}

	//ReAction:
	//	FireAction | EventAction;
	public ReActionElements getReActionAccess() {
		return (pReAction != null) ? pReAction : (pReAction = new ReActionElements());
	}
	
	public ParserRule getReActionRule() {
		return getReActionAccess().getRule();
	}

	//FireAction:
	//	{FireAction} (name=QualifiedName ":")? "action" (inputPatterns+=InputPattern ("," inputPatterns+=InputPattern)*)?
	//	MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)?
	//	("delay" delayExpression=XExpression)? //	(attributes+=ActionVariable)*
	//	("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end";
	public FireActionElements getFireActionAccess() {
		return (pFireAction != null) ? pFireAction : (pFireAction = new FireActionElements());
	}
	
	public ParserRule getFireActionRule() {
		return getFireActionAccess().getRule();
	}

	//XBodyExpression returns xbase::XExpression:
	//	{xbase::XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
	public XBodyExpressionElements getXBodyExpressionAccess() {
		return (pXBodyExpression != null) ? pXBodyExpression : (pXBodyExpression = new XBodyExpressionElements());
	}
	
	public ParserRule getXBodyExpressionRule() {
		return getXBodyExpressionAccess().getRule();
	}

	//InputPattern:
	//	{InputPattern} (portRef=[Port|ValidID] ":")? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("repeat"
	//	repeatExpression=XExpression)? channels=ChannelSelector? ("when" guardExpression=XExpression)?;
	public InputPatternElements getInputPatternAccess() {
		return (pInputPattern != null) ? pInputPattern : (pInputPattern = new InputPatternElements());
	}
	
	public ParserRule getInputPatternRule() {
		return getInputPatternAccess().getRule();
	}

	//ChannelSelector:
	//	ExpressionChannelSelector | KeywordChannelSelector;
	public ChannelSelectorElements getChannelSelectorAccess() {
		return (pChannelSelector != null) ? pChannelSelector : (pChannelSelector = new ChannelSelectorElements());
	}
	
	public ParserRule getChannelSelectorRule() {
		return getChannelSelectorAccess().getRule();
	}

	//ExpressionChannelSelector:
	//	{ExpressionChannelSelector} ("at" | many?="at*") "{" keyExpressions+=XExpression ("," keyExpressions+=XExpression)*
	//	"}";
	public ExpressionChannelSelectorElements getExpressionChannelSelectorAccess() {
		return (pExpressionChannelSelector != null) ? pExpressionChannelSelector : (pExpressionChannelSelector = new ExpressionChannelSelectorElements());
	}
	
	public ParserRule getExpressionChannelSelectorRule() {
		return getExpressionChannelSelectorAccess().getRule();
	}

	//KeywordChannelSelector:
	//	"at"? keyword=ChannelSelectorKeyword;
	public KeywordChannelSelectorElements getKeywordChannelSelectorAccess() {
		return (pKeywordChannelSelector != null) ? pKeywordChannelSelector : (pKeywordChannelSelector = new KeywordChannelSelectorElements());
	}
	
	public ParserRule getKeywordChannelSelectorRule() {
		return getKeywordChannelSelectorAccess().getRule();
	}

	//enum ChannelSelectorKeyword:
	//	ALL="all" | ANY="any";
	public ChannelSelectorKeywordElements getChannelSelectorKeywordAccess() {
		return (unknownRuleChannelSelectorKeyword != null) ? unknownRuleChannelSelectorKeyword : (unknownRuleChannelSelectorKeyword = new ChannelSelectorKeywordElements());
	}
	
	public EnumRule getChannelSelectorKeywordRule() {
		return getChannelSelectorKeywordAccess().getRule();
	}

	//Schedule:
	//	"schedule" "fsm"? initial=[State] ":" states+=State+ "end";
	public ScheduleElements getScheduleAccess() {
		return (pSchedule != null) ? pSchedule : (pSchedule = new ScheduleElements());
	}
	
	public ParserRule getScheduleRule() {
		return getScheduleAccess().getRule();
	}

	//State:
	//	name=ValidID (transitions+=Transition ("|" transitions+=Transition)*)? ";";
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Transition:
	//	"(" tags+=QualifiedName ("," tags+=QualifiedName)* ")" "-->" target=[State|ValidID];
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//EventAction:
	//	{EventAction} (name=QualifiedName ":")? "event" (eventPatterns+=EventPattern ("," eventPatterns+=EventPattern)*)?
	//	MAPS_TO (outputPatterns+=OutputPattern ("," outputPatterns+=OutputPattern)*)? ("guard" guardExpression=XExpression)? //	(attributes+=ActionVariable)*
	//	("do" bodyExpression=XBodyExpression)? ("update" updateExpression=XBodyExpression)? "end";
	public EventActionElements getEventActionAccess() {
		return (pEventAction != null) ? pEventAction : (pEventAction = new EventActionElements());
	}
	
	public ParserRule getEventActionRule() {
		return getEventActionAccess().getRule();
	}

	//EventPattern:
	//	{EventPattern} varRef=[StateVariable|ValidID] (property?="." | "!") name=(ValidID | STRING) ("#" qualifier=(ValidID |
	//	STRING))? "[" (variables+=ValidID ("," variables+=ValidID)*)? "]" ("@" timeExpression=XExpression)? ("when"
	//	guardExpression=XExpression)?;
	public EventPatternElements getEventPatternAccess() {
		return (pEventPattern != null) ? pEventPattern : (pEventPattern = new EventPatternElements());
	}
	
	public ParserRule getEventPatternRule() {
		return getEventPatternAccess().getRule();
	}

	//// XBase overrides
	//// support # index operator, with highest priority
	//XUnaryOperation returns xbase::XExpression:
	//	{xbase::XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XOther2OperatorExpression |
	//	XOther2OperatorExpression;
	public XUnaryOperationElements getXUnaryOperationAccess() {
		return (pXUnaryOperation != null) ? pXUnaryOperation : (pXUnaryOperation = new XUnaryOperationElements());
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//XOther2OperatorExpression returns xbase::XExpression:
	//	XCastedExpression (=> ({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther2])
	//	rightOperand=XCastedExpression)*;
	public XOther2OperatorExpressionElements getXOther2OperatorExpressionAccess() {
		return (pXOther2OperatorExpression != null) ? pXOther2OperatorExpression : (pXOther2OperatorExpression = new XOther2OperatorExpressionElements());
	}
	
	public ParserRule getXOther2OperatorExpressionRule() {
		return getXOther2OperatorExpressionAccess().getRule();
	}

	//OpOther2:
	//	"#";
	public OpOther2Elements getOpOther2Access() {
		return (pOpOther2 != null) ? pOpOther2 : (pOpOther2 = new OpOther2Elements());
	}
	
	public ParserRule getOpOther2Rule() {
		return getOpOther2Access().getRule();
	}

	////	|
	////	(=>({xbase::XClosure} 'lambda') '('=>((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?=')')
	////		':'
	////		expression=XBodyExpression
	////		'end'
	////	)
	//XClosure returns xbase::XExpression:
	//	=> ({xbase::XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XClosureElements getXClosureAccess() {
		return (pXClosure != null) ? pXClosure : (pXClosure = new XClosureElements());
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<") | "<>" | "?:" | "<=>";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XMemberFeatureCall (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] (=> explicitOperationCall?="("
	//	(memberCallArguments+=XShortClosure | memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")?
	//	memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XFeatureCall | XLiteral | XIfExpression | XForLoopExpression
	//	| XWhileExpression | XDoWhileExpression | XThrowExpression | XReturnExpression | XTryCatchFinallyExpression |
	//	XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> (localVarName=ValidID ":")? switch=XExpression | => ("(" localVarName=ValidID ":")
	//	switch=XExpression ")") "{" cases+=XCasePart+ ("default" ":" default=XExpression)? "}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	typeGuard=JvmTypeReference? ("case" case=XExpression)? ":" then=XExpression;
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	{XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":" forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionInsideBlock ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionInsideBlock returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionInsideBlockElements getXExpressionInsideBlockAccess() {
		return gaXbase.getXExpressionInsideBlockAccess();
	}
	
	public ParserRule getXExpressionInsideBlockRule() {
		return getXExpressionInsideBlockAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? ("("
	//	(arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")? arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" => expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbase.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbase.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbase.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbase.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbase.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbase.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbase.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbase.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbase.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbase.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbase.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbase.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbase.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedName] "." "*" |
	//	importedType=[JvmDeclaredType|QualifiedName] | importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbase.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbase.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXbase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbase.getANY_OTHERRule();
	} 
}
